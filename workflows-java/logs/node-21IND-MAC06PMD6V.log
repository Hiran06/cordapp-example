[INFO ] 2021-09-06T17:09:36,250Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/generated-custom-cordapps/20210906-170935.668/custom-cordapp_1_7_bb3566fc-c433-48fb-9dce-74fa5f6f360d.jar, rootPackageName=null), RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/generated-custom-cordapps/20210906-170935.668/custom-cordapp_1_7_da601b1b-4a98-4aac-8897-57f101db37de.jar, rootPackageName=null) {}
[INFO ] 2021-09-06T17:09:36,318Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/generated-custom-cordapps/20210906-170935.668/custom-cordapp_1_7_bb3566fc-c433-48fb-9dce-74fa5f6f360d.jar {}
[INFO ] 2021-09-06T17:09:36,403Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/generated-custom-cordapps/20210906-170935.668/custom-cordapp_1_7_da601b1b-4a98-4aac-8897-57f101db37de.jar {}
[ERROR] 2021-09-06T17:09:38,767Z [Test worker] internal.Verifier. - Error validating transaction F86318471B0AE89A9540ED79DA848D98131F8EBAC0F2AB74DB1FAA5C80CADB41. - Failed requirement: The lender and the borrower cannot be the same entity. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: The lender and the borrower cannot be the same entity.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:44) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$10(IOUContractTests.java:96) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$lenderIsNotBorrower$11(IOUContractTests.java:93) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lenderIsNotBorrower(IOUContractTests.java:92) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_292]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_292]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_292]
[ERROR] 2021-09-06T17:09:38,769Z [Test worker] internal.Verifier. - Error validating transaction F86318471B0AE89A9540ED79DA848D98131F8EBAC0F2AB74DB1FAA5C80CADB41. - Failed requirement: The lender and the borrower cannot be the same entity. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: The lender and the borrower cannot be the same entity.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:44) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$10(IOUContractTests.java:96) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$lenderIsNotBorrower$11(IOUContractTests.java:93) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lenderIsNotBorrower(IOUContractTests.java:92) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_292]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_292]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_292]
[ERROR] 2021-09-06T17:09:38,785Z [Test worker] internal.Verifier. - Error validating transaction F86318471B0AE89A9540ED79DA848D98131F8EBAC0F2AB74DB1FAA5C80CADB41. - Failed requirement: The lender and the borrower cannot be the same entity. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: The lender and the borrower cannot be the same entity.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:44) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:309) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$lenderIsNotBorrower$11(IOUContractTests.java:93) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lenderIsNotBorrower(IOUContractTests.java:92) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_292]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_292]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_292]
[ERROR] 2021-09-06T17:09:38,928Z [Test worker] internal.Verifier. - Error validating transaction 889FB0B093806A21CA953F4B76659A68387F4AE1A2BFB82FD644D02B6C864123. - Failed requirement: Only one output state should be created. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: Only one output state should be created.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:41) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$4(IOUContractTests.java:57) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveOneOutput$5(IOUContractTests.java:53) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveOneOutput(IOUContractTests.java:52) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_292]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_292]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_292]
[ERROR] 2021-09-06T17:09:38,933Z [Test worker] internal.Verifier. - Error validating transaction 889FB0B093806A21CA953F4B76659A68387F4AE1A2BFB82FD644D02B6C864123. - Failed requirement: Only one output state should be created. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: Only one output state should be created.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:41) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$4(IOUContractTests.java:57) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveOneOutput$5(IOUContractTests.java:53) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveOneOutput(IOUContractTests.java:52) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_292]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_292]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_292]
[ERROR] 2021-09-06T17:09:38,946Z [Test worker] internal.Verifier. - Error validating transaction 889FB0B093806A21CA953F4B76659A68387F4AE1A2BFB82FD644D02B6C864123. - Failed requirement: Only one output state should be created. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: Only one output state should be created.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:41) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:309) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveOneOutput$5(IOUContractTests.java:53) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveOneOutput(IOUContractTests.java:52) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_292]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_292]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_292]
[ERROR] 2021-09-06T17:09:39,045Z [Test worker] internal.Verifier. - Error validating transaction 5AD9D7C2BC439721629E8761C50C7BEB978B755BB86A6B9EDF188BA1B4BB320A. - Failed requirement: All of the participants must be signers. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:46) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$8(IOUContractTests.java:83) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$borrowerMustSignTransaction$9(IOUContractTests.java:80) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.borrowerMustSignTransaction(IOUContractTests.java:79) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_292]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_292]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_292]
[ERROR] 2021-09-06T17:09:39,047Z [Test worker] internal.Verifier. - Error validating transaction 5AD9D7C2BC439721629E8761C50C7BEB978B755BB86A6B9EDF188BA1B4BB320A. - Failed requirement: All of the participants must be signers. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:46) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$8(IOUContractTests.java:83) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$borrowerMustSignTransaction$9(IOUContractTests.java:80) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.borrowerMustSignTransaction(IOUContractTests.java:79) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_292]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_292]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_292]
[ERROR] 2021-09-06T17:09:39,054Z [Test worker] internal.Verifier. - Error validating transaction 5AD9D7C2BC439721629E8761C50C7BEB978B755BB86A6B9EDF188BA1B4BB320A. - Failed requirement: All of the participants must be signers. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:46) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:309) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$borrowerMustSignTransaction$9(IOUContractTests.java:80) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.borrowerMustSignTransaction(IOUContractTests.java:79) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_292]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_292]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_292]
[WARN ] 2021-09-06T17:09:39,112Z [Test worker] contracts.AttachmentConstraint. - Found state com.example.contract.IOUContract that is constrained by the insecure: AlwaysAcceptAttachmentConstraint. {}
[ERROR] 2021-09-06T17:09:39,137Z [Test worker] internal.Verifier. - Error validating transaction 8873AAE697BC72F81815E6B055B7FEAC87A8F12CEB90F3233161487ED969473C. - Required com.example.contract.IOUContract.Commands.Create command [errorCode=11xj1ns, moreInformationAt=https://errors.corda.net/OS/4.5/11xj1ns] {}
java.lang.IllegalStateException: Required com.example.contract.IOUContract.Commands.Create command
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:81) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:36) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:309) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._unverifiedTransaction(TestDSL.kt:347) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.input(TransactionDSLInterpreter.kt:150) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$2(IOUContractTests.java:40) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveNoInputs$3(IOUContractTests.java:39) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveNoInputs(IOUContractTests.java:38) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_292]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_292]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_292]
[ERROR] 2021-09-06T17:09:39,228Z [Test worker] internal.Verifier. - Error validating transaction 33823117CAEBE40B090B590ECE72EC2619DA91556AC7CA203F7E8DC19B18B02C. - Failed requirement: No inputs should be consumed when issuing an IOU. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: No inputs should be consumed when issuing an IOU.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:39) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$2(IOUContractTests.java:43) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveNoInputs$3(IOUContractTests.java:39) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveNoInputs(IOUContractTests.java:38) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_292]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_292]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_292]
[ERROR] 2021-09-06T17:09:39,232Z [Test worker] internal.Verifier. - Error validating transaction 33823117CAEBE40B090B590ECE72EC2619DA91556AC7CA203F7E8DC19B18B02C. - Failed requirement: No inputs should be consumed when issuing an IOU. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: No inputs should be consumed when issuing an IOU.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:39) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$2(IOUContractTests.java:43) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveNoInputs$3(IOUContractTests.java:39) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveNoInputs(IOUContractTests.java:38) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_292]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_292]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_292]
[ERROR] 2021-09-06T17:09:39,239Z [Test worker] internal.Verifier. - Error validating transaction 33823117CAEBE40B090B590ECE72EC2619DA91556AC7CA203F7E8DC19B18B02C. - Failed requirement: No inputs should be consumed when issuing an IOU. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: No inputs should be consumed when issuing an IOU.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:39) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:309) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveNoInputs$3(IOUContractTests.java:39) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveNoInputs(IOUContractTests.java:38) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_292]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_292]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_292]
[ERROR] 2021-09-06T17:09:39,333Z [Test worker] internal.Verifier. - Error validating transaction 92B1FCD66DEED82A8B2E33312053374E100D19E83B52250469EC6AA35D98A763. - Failed requirement: The IOU's value must be non-negative. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$12(IOUContractTests.java:109) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$cannotCreateNegativeValueIOUs$13(IOUContractTests.java:106) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.cannotCreateNegativeValueIOUs(IOUContractTests.java:105) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_292]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_292]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_292]
[ERROR] 2021-09-06T17:09:39,334Z [Test worker] internal.Verifier. - Error validating transaction 92B1FCD66DEED82A8B2E33312053374E100D19E83B52250469EC6AA35D98A763. - Failed requirement: The IOU's value must be non-negative. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$12(IOUContractTests.java:109) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$cannotCreateNegativeValueIOUs$13(IOUContractTests.java:106) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.cannotCreateNegativeValueIOUs(IOUContractTests.java:105) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_292]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_292]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_292]
[ERROR] 2021-09-06T17:09:39,340Z [Test worker] internal.Verifier. - Error validating transaction 92B1FCD66DEED82A8B2E33312053374E100D19E83B52250469EC6AA35D98A763. - Failed requirement: The IOU's value must be non-negative. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:309) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$cannotCreateNegativeValueIOUs$13(IOUContractTests.java:106) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.cannotCreateNegativeValueIOUs(IOUContractTests.java:105) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_292]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_292]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_292]
[ERROR] 2021-09-06T17:09:39,712Z [Test worker] internal.Verifier. - Error validating transaction B68E167DF2A7E17A9C0DE391381C1BAB35AB4B23B245983C1E3983EDEB12775C. - Failed requirement: All of the participants must be signers. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:46) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$6(IOUContractTests.java:70) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$lenderMustSignTransaction$7(IOUContractTests.java:67) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lenderMustSignTransaction(IOUContractTests.java:66) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_292]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_292]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_292]
[ERROR] 2021-09-06T17:09:39,714Z [Test worker] internal.Verifier. - Error validating transaction B68E167DF2A7E17A9C0DE391381C1BAB35AB4B23B245983C1E3983EDEB12775C. - Failed requirement: All of the participants must be signers. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:46) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:186) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:78) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$6(IOUContractTests.java:70) ~[test/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:281) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:305) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$lenderMustSignTransaction$7(IOUContractTests.java:67) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lenderMustSignTransaction(IOUContractTests.java:66) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_292]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_292]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_292]
[ERROR] 2021-09-06T17:09:39,718Z [Test worker] internal.Verifier. - Error validating transaction B68E167DF2A7E17A9C0DE391381C1BAB35AB4B23B245983C1E3983EDEB12775C. - Failed requirement: All of the participants must be signers. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:46) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:142) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:309) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:341) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$lenderMustSignTransaction$7(IOUContractTests.java:67) ~[test/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:19) ~[corda-test-common-4.5.jar:?]
	at net.corda.coretesting.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:54) ~[corda-core-test-utils-4.5.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:220) ~[corda-test-utils-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.5.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.5.jar:?]
	at com.example.test.contract.IOUContractTests.lenderMustSignTransaction(IOUContractTests.java:66) ~[test/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118) ~[?:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_292]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_292]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_292]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_292]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157) ~[?:?]
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404) ~[?:?]
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_292]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_292]
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55) ~[gradle-tooling-api-5.4.1.jar:5.4.1]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_292]
[INFO ] 2021-09-06T17:09:40,039Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java ... {}
[INFO ] 2021-09-06T17:09:40,189Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-09-06T17:09:41,052Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2021-09-06T17:09:41,820Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2021-09-06T17:09:41,831Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2021-09-06T17:09:41,831Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-09-06T17:09:42,268Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-09-06T17:09:42,290Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2021-09-06T17:09:42,681Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-09-06T17:09:42,682Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-09-06T17:09:42,682Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2021-09-06T17:09:42,821Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-09-06T17:09:42,832Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-09-06T17:09:43,244Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2021-09-06T17:09:43,435Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-09-06T17:09:43,446Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2021-09-06T17:09:43,468Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-09-06T17:09:43,468Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2021-09-06T17:09:43,468Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2021-09-06T17:09:43,874Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-09-06T17:09:43,874Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2021-09-06T17:09:43,885Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of detachedConfiguration1 {}
[INFO ] 2021-09-06T17:09:43,895Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2021-09-06T17:09:43,895Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :clients:classpath {}
[INFO ] 2021-09-06T17:09:43,906Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2021-09-06T17:09:43,906Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2021-09-06T17:09:43,906Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2021-09-06T17:09:43,906Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2021-09-06T17:09:43,906Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2021-09-06T17:09:44,261Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-09-06T17:09:44,261Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-java {}
[INFO ] 2021-09-06T17:09:44,305Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-09-06T17:09:44,306Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-kotlin {}
[INFO ] 2021-09-06T17:09:44,318Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-09-06T17:09:44,318Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-java {}
[INFO ] 2021-09-06T17:09:44,409Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-09-06T17:09:44,409Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-kotlin {}
[INFO ] 2021-09-06T17:09:44,455Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2021-09-06T17:09:44,455Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-09-06T17:09:44,533Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-09-06T17:09:44,544Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2021-09-06T17:09:44,587Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:compileClasspath {}
[INFO ] 2021-09-06T17:09:44,629Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2021-09-06T17:09:44,629Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:compileClasspath {}
[INFO ] 2021-09-06T17:09:44,629Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2021-09-06T17:09:44,650Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:annotationProcessor {}
[INFO ] 2021-09-06T17:09:44,650Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2021-09-06T17:09:44,660Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-09-06T17:09:44,660Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:processResources {}
[INFO ] 2021-09-06T17:09:44,673Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-09-06T17:09:44,673Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:classes {}
[INFO ] 2021-09-06T17:09:44,673Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-09-06T17:09:44,673Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2021-09-06T17:09:44,673Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:runtime {}
[INFO ] 2021-09-06T17:09:44,696Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2021-09-06T17:09:44,696Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:runtime {}
[INFO ] 2021-09-06T17:09:44,707Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2021-09-06T17:09:44,707Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-09-06T17:09:44,707Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:jar {}
[INFO ] 2021-09-06T17:09:44,718Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-09-06T17:09:44,718Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2021-09-06T17:09:44,718Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:compileClasspath {}
[INFO ] 2021-09-06T17:09:44,782Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2021-09-06T17:09:44,782Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:compileClasspath {}
[INFO ] 2021-09-06T17:09:44,782Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2021-09-06T17:09:44,804Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:annotationProcessor {}
[INFO ] 2021-09-06T17:09:44,805Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2021-09-06T17:09:44,805Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-09-06T17:09:44,805Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:processResources {}
[INFO ] 2021-09-06T17:09:44,805Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-09-06T17:09:44,805Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:classes {}
[INFO ] 2021-09-06T17:09:44,805Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-09-06T17:09:44,805Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2021-09-06T17:09:44,805Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:runtime {}
[INFO ] 2021-09-06T17:09:44,842Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2021-09-06T17:09:44,842Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2021-09-06T17:09:44,852Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2021-09-06T17:09:44,852Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2021-09-06T17:09:44,852Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2021-09-06T17:09:44,852Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2021-09-06T17:09:44,852Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2021-09-06T17:09:44,852Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2021-09-06T17:09:44,852Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2021-09-06T17:09:44,852Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2021-09-06T17:09:44,852Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2021-09-06T17:09:44,852Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2021-09-06T17:09:44,852Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2021-09-06T17:09:44,852Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2021-09-06T17:09:44,852Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2021-09-06T17:09:44,852Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-09-06T17:09:44,852Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:jar {}
[INFO ] 2021-09-06T17:09:44,852Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2021-09-06T17:09:44,862Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-09-06T17:09:44,862Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows-java' {}
[INFO ] 2021-09-06T17:09:44,862Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2021-09-06T17:09:44,877Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-09-06T17:09:44,877Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/.gradle {}
[INFO ] 2021-09-06T17:09:44,887Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2021-09-06T17:09:44,899Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2021-09-06T17:09:46,920Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210906-170939.816/nodes/0/cordapps] {}
[INFO ] 2021-09-06T17:09:46,923Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-170939.816/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-170939.816/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2021-09-06T17:09:46,927Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-170939.816/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2021-09-06T17:09:46,937Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-170939.816/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2021-09-06T17:09:47,605Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-09-06T17:09:47,730Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-09-06T17:09:47,775Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-09-06T17:09:47,856Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-09-06T17:09:47,931Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-09-06T17:09:39.807Z
      epoch=1
  } {}
[INFO ] 2021-09-06T17:09:52,236Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:52,237Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20210906-170939.816/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:52,237Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:52,258Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:52,303Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:52,307Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:53,957Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:54,456Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:54,458Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:54,461Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:54,461Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:54,520Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:54,551Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-09-06T17:09:54,566Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2021-09-06T17:09:54,566Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2021-09-06T17:09:54,750Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2021-09-06T17:09:54,757Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-09-06T17:09:54,757Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948194757) {}
[INFO ] 2021-09-06T17:09:54,760Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-09-06T17:09:54,909Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948194757) {}
[INFO ] 2021-09-06T17:09:54,973Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-09-06T17:09:54,996Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-09-06T17:09:54,998Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-09-06T17:09:55,004Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948194757) {}
[INFO ] 2021-09-06T17:09:55,032Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:09:55,061Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8F9F88008B8F1EB95723502A02803512BA8D5DB53332836C6557732F16F4ED9D uploader=app filename=CorDapp Example {}
[INFO ] 2021-09-06T17:09:55,069Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2021-09-06T17:09:55,073Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2021-09-06T17:09:55,506Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948194757) {}
[INFO ] 2021-09-06T17:09:55,549Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948194757) {}
[INFO ] 2021-09-06T17:09:55,551Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:09:55,552Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948194757) {}
[INFO ] 2021-09-06T17:09:55,552Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:09:55,561Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210906-170939.816/nodes/1/cordapps] {}
[INFO ] 2021-09-06T17:09:55,562Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-170939.816/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-170939.816/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2021-09-06T17:09:55,562Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-170939.816/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2021-09-06T17:09:55,572Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-170939.816/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2021-09-06T17:09:55,599Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-09-06T17:09:55,601Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-09-06T17:09:55,602Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-09-06T17:09:55,636Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-09-06T17:09:55,654Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-09-06T17:09:39.807Z
      epoch=1
  } {}
[INFO ] 2021-09-06T17:09:56,381Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:56,383Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20210906-170939.816/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:56,383Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:56,436Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:56,440Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:56,440Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:56,599Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:56,610Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:56,612Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:56,614Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:56,614Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:56,671Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:56,677Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-09-06T17:09:56,679Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:09:56,679Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:09:56,793Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:09:56,794Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2021-09-06T17:09:56,817Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-09-06T17:09:56,817Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948196817) {}
[INFO ] 2021-09-06T17:09:56,819Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-09-06T17:09:56,827Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948196817) {}
[INFO ] 2021-09-06T17:09:56,835Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-09-06T17:09:56,835Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-09-06T17:09:56,835Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-09-06T17:09:56,838Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948196817) {}
[INFO ] 2021-09-06T17:09:56,844Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:09:56,873Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8F9F88008B8F1EB95723502A02803512BA8D5DB53332836C6557732F16F4ED9D uploader=app filename=CorDapp Example {}
[INFO ] 2021-09-06T17:09:56,883Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948196817) {}
[INFO ] 2021-09-06T17:09:56,887Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948194757) {}
[INFO ] 2021-09-06T17:09:56,889Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-09-06T17:09:56,901Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948196817) {}
[INFO ] 2021-09-06T17:09:56,902Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-09-06T17:09:56,915Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948196817) {}
[INFO ] 2021-09-06T17:09:56,915Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:09:56,915Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948196817) {}
[INFO ] 2021-09-06T17:09:56,915Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:09:56,921Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210906-170939.816/nodes/2/cordapps] {}
[INFO ] 2021-09-06T17:09:56,921Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-170939.816/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-170939.816/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2021-09-06T17:09:56,921Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-170939.816/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2021-09-06T17:09:56,936Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-170939.816/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2021-09-06T17:09:56,965Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-09-06T17:09:56,966Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-09-06T17:09:56,967Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-09-06T17:09:57,002Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-09-06T17:09:57,005Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-09-06T17:09:39.807Z
      epoch=1
  } {}
[INFO ] 2021-09-06T17:09:57,623Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:57,625Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20210906-170939.816/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:57,625Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:57,637Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:57,640Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:57,640Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:57,723Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:57,729Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:57,730Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:57,732Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:57,733Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:57,772Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:57,776Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-09-06T17:09:57,777Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:09:57,777Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:09:57,864Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:09:57,865Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2021-09-06T17:09:57,880Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-09-06T17:09:57,880Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948197880) {}
[INFO ] 2021-09-06T17:09:57,881Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-09-06T17:09:57,887Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948197880) {}
[INFO ] 2021-09-06T17:09:57,891Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-09-06T17:09:57,891Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-09-06T17:09:57,892Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-09-06T17:09:57,894Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948197880) {}
[INFO ] 2021-09-06T17:09:57,898Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:09:57,916Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8F9F88008B8F1EB95723502A02803512BA8D5DB53332836C6557732F16F4ED9D uploader=app filename=CorDapp Example {}
[INFO ] 2021-09-06T17:09:57,922Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948197880) {}
[INFO ] 2021-09-06T17:09:57,924Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948194757) {}
[INFO ] 2021-09-06T17:09:57,925Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-09-06T17:09:57,940Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948197880) {}
[INFO ] 2021-09-06T17:09:57,941Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-09-06T17:09:57,949Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948196817) {}
[INFO ] 2021-09-06T17:09:57,950Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-09-06T17:09:57,957Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948197880) {}
[INFO ] 2021-09-06T17:09:57,958Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-09-06T17:09:57,965Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948197880) {}
[INFO ] 2021-09-06T17:09:57,965Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:09:57,965Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948197880) {}
[INFO ] 2021-09-06T17:09:57,965Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2021-09-06T17:09:57,966Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2021-09-06T17:09:57,966Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2021-09-06T17:09:57,970Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2021-09-06T17:09:57,970Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2021-09-06T17:09:58,167Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c4b6208d-b352-4292-9549-81ef53e1aeb5, invocation_id=f74f9b4a-41bb-4f50-ae5c-2340a809c34b, invocation_timestamp=2021-09-06T17:09:58.017Z, origin=Only For Testing, session_id=f74f9b4a-41bb-4f50-ae5c-2340a809c34b, session_timestamp=2021-09-06T17:09:58.017Z, thread-id=514}
[WARN ] 2021-09-06T17:09:58,167Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract com.example.contract.IOUContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c4b6208d-b352-4292-9549-81ef53e1aeb5, invocation_id=f74f9b4a-41bb-4f50-ae5c-2340a809c34b, invocation_timestamp=2021-09-06T17:09:58.017Z, origin=Only For Testing, session_id=f74f9b4a-41bb-4f50-ae5c-2340a809c34b, session_timestamp=2021-09-06T17:09:58.017Z, thread-id=514}
[ERROR] 2021-09-06T17:09:58,203Z [Mock network] internal.Verifier. - Error validating transaction 556D21D49C890A014BD72ADA319BF65460E68EF5F0782B408FC7BC154885FB50. - Failed requirement: The IOU's value must be non-negative. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c4b6208d-b352-4292-9549-81ef53e1aeb5, invocation_id=f74f9b4a-41bb-4f50-ae5c-2340a809c34b, invocation_timestamp=2021-09-06T17:09:58.017Z, origin=Only For Testing, session_id=f74f9b4a-41bb-4f50-ae5c-2340a809c34b, session_timestamp=2021-09-06T17:09:58.017Z, thread-id=514}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toLedgerTransaction(TransactionBuilder.kt:622) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.5.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:101) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:299) ~[corda-node-4.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:66) ~[corda-node-4.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_292]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_292]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_292]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_292]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_292]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_292]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.5.jar:?]
[ERROR] 2021-09-06T17:09:58,205Z [Mock network] internal.Verifier. - Error validating transaction 556D21D49C890A014BD72ADA319BF65460E68EF5F0782B408FC7BC154885FB50. - Failed requirement: The IOU's value must be non-negative. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.5/9q63wp] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c4b6208d-b352-4292-9549-81ef53e1aeb5, invocation_id=f74f9b4a-41bb-4f50-ae5c-2340a809c34b, invocation_timestamp=2021-09-06T17:09:58.017Z, origin=Only For Testing, session_id=f74f9b4a-41bb-4f50-ae5c-2340a809c34b, session_timestamp=2021-09-06T17:09:58.017Z, thread-id=514}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.5.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:101) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:299) ~[corda-node-4.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:66) ~[corda-node-4.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_292]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_292]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_292]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_292]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_292]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_292]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.5.jar:?]
[INFO ] 2021-09-06T17:09:58,205Z [Mock network] corda.flow. - Flow raised an error: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 556D21D49C890A014BD72ADA319BF65460E68EF5F0782B408FC7BC154885FB50. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c4b6208d-b352-4292-9549-81ef53e1aeb5, invocation_id=f74f9b4a-41bb-4f50-ae5c-2340a809c34b, invocation_timestamp=2021-09-06T17:09:58.017Z, origin=Only For Testing, session_id=f74f9b4a-41bb-4f50-ae5c-2340a809c34b, session_timestamp=2021-09-06T17:09:58.017Z, thread-id=514}
[INFO ] 2021-09-06T17:09:58,212Z [Mock network] statemachine.StaffedFlowHospital. - Flow [c4b6208d-b352-4292-9549-81ef53e1aeb5] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=f74f9b4a-41bb-4f50-ae5c-2340a809c34b, timestamp: 2021-09-06T17:09:58.017Z, entityType: Invocation, sessionId=f74f9b4a-41bb-4f50-ae5c-2340a809c34b, timestamp: 2021-09-06T17:09:58.017Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class com.example.flow.ExampleFlow$Initiator, classToInitiateWith=class com.example.flow.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=7, corDappName=cordapp-example-workflows-0.1, corDappHash=07E4443FF34C094BAB9F10D1418C545C5B7BA63FFD80DF7AE91689C2C99BF70C), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=482CC1A213D3BF07EFA287443EE516C1DCADB47A76D76BA0EB87303B801D8E2C), errorState=Clean, numberOfSuspends=0), flowLogic=com.example.flow.ExampleFlow$Initiator@2c3310ec, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, senderUUID=6eb79008-0924-4d57-9e6b-196705d4f562) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c4b6208d-b352-4292-9549-81ef53e1aeb5, invocation_id=f74f9b4a-41bb-4f50-ae5c-2340a809c34b, invocation_timestamp=2021-09-06T17:09:58.017Z, origin=Only For Testing, session_id=f74f9b4a-41bb-4f50-ae5c-2340a809c34b, session_timestamp=2021-09-06T17:09:58.017Z, thread-id=514}
[INFO ] 2021-09-06T17:09:58,213Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c4b6208d-b352-4292-9549-81ef53e1aeb5, invocation_id=f74f9b4a-41bb-4f50-ae5c-2340a809c34b, invocation_timestamp=2021-09-06T17:09:58.017Z, origin=Only For Testing, session_id=f74f9b4a-41bb-4f50-ae5c-2340a809c34b, session_timestamp=2021-09-06T17:09:58.017Z, thread-id=514}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 556D21D49C890A014BD72ADA319BF65460E68EF5F0782B408FC7BC154885FB50
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:423) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.5.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:101) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:299) ~[corda-node-4.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:66) ~[corda-node-4.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_292]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_292]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_292]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_292]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_292]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_292]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	... 19 more
[INFO ] 2021-09-06T17:09:58,216Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c4b6208d-b352-4292-9549-81ef53e1aeb5, invocation_id=f74f9b4a-41bb-4f50-ae5c-2340a809c34b, invocation_timestamp=2021-09-06T17:09:58.017Z, origin=Only For Testing, session_id=f74f9b4a-41bb-4f50-ae5c-2340a809c34b, session_timestamp=2021-09-06T17:09:58.017Z, thread-id=514}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 556D21D49C890A014BD72ADA319BF65460E68EF5F0782B408FC7BC154885FB50
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:423) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.5.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:101) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:299) ~[corda-node-4.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:66) ~[corda-node-4.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_292]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_292]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_292]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_292]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_292]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_292]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	... 19 more
[WARN ] 2021-09-06T17:09:58,232Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [c4b6208d-b352-4292-9549-81ef53e1aeb5] errored, dumping all transitions:

 --- Transition of flow [c4b6208d-b352-4292-9549-81ef53e1aeb5] ---
  Timestamp: 2021-09-06T17:09:58.161Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[c4b6208d-b352-4292-9549-81ef53e1aeb5], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=f74f9b4a-41bb-4f50-ae5c-2340a809c34b, timestamp: 2021-09-06T17:09:58.017Z, entityType: Invocation, sessionId=f74f9b4a-41bb-4f50-ae5c-2340a809c34b, timestamp: 2021-09-06T17:09:58.017Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class com.example.flow.ExampleFlow$Initiator, classToInitiateWith=class com.example.flow.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=7, corDappName=cordapp-example-workflows-0.1, corDappHash=07E4443FF34C094BAB9F10D1418C545C5B7BA63FFD80DF7AE91689C2C99BF70C), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=482CC1A213D3BF07EFA287443EE516C1DCADB47A76D76BA0EB87303B801D8E2C), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@763d3d2e])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@763d3d2e])
    SignalFlowHasStarted(flowId=[c4b6208d-b352-4292-9549-81ef53e1aeb5])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@763d3d2e]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [c4b6208d-b352-4292-9549-81ef53e1aeb5] ---
  Timestamp: 2021-09-06T17:09:58.218Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 556D21D49C890A014BD72ADA319BF65460E68EF5F0782B408FC7BC154885FB50)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=1646824386021298786, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 556D21D49C890A014BD72ADA319BF65460E68EF5F0782B408FC7BC154885FB50)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2021-09-06T17:09:58.110Z
    2021-09-06T17:09:58.210Z


 --- Transition of flow [c4b6208d-b352-4292-9549-81ef53e1aeb5] ---
  Timestamp: 2021-09-06T17:09:58.222Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [c4b6208d-b352-4292-9549-81ef53e1aeb5] ---
  Timestamp: 2021-09-06T17:09:58.224Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2021-09-06T17:09:58.210Z
    2021-09-06T17:09:58.224Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c4b6208d-b352-4292-9549-81ef53e1aeb5, invocation_id=f74f9b4a-41bb-4f50-ae5c-2340a809c34b, invocation_timestamp=2021-09-06T17:09:58.017Z, origin=Only For Testing, session_id=f74f9b4a-41bb-4f50-ae5c-2340a809c34b, session_timestamp=2021-09-06T17:09:58.017Z, thread-id=514}
[WARN ] 2021-09-06T17:09:58,232Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [c4b6208d-b352-4292-9549-81ef53e1aeb5] error - Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 556D21D49C890A014BD72ADA319BF65460E68EF5F0782B408FC7BC154885FB50 - Failed requirement: The IOU's value must be non-negative. [errorCode=w61rmu, moreInformationAt=https://errors.corda.net/OS/4.5/w61rmu] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c4b6208d-b352-4292-9549-81ef53e1aeb5, invocation_id=f74f9b4a-41bb-4f50-ae5c-2340a809c34b, invocation_timestamp=2021-09-06T17:09:58.017Z, origin=Only For Testing, session_id=f74f9b4a-41bb-4f50-ae5c-2340a809c34b, session_timestamp=2021-09-06T17:09:58.017Z, thread-id=514}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 556D21D49C890A014BD72ADA319BF65460E68EF5F0782B408FC7BC154885FB50
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:423) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.5.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:101) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:299) ~[corda-node-4.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:66) ~[corda-node-4.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_292]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_292]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_292]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_292]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_292]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_292]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	... 19 more
[WARN ] 2021-09-06T17:09:58,235Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error - Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 556D21D49C890A014BD72ADA319BF65460E68EF5F0782B408FC7BC154885FB50 - Failed requirement: The IOU's value must be non-negative. [errorCode=w61rmu, moreInformationAt=https://errors.corda.net/OS/4.5/w61rmu] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c4b6208d-b352-4292-9549-81ef53e1aeb5, invocation_id=f74f9b4a-41bb-4f50-ae5c-2340a809c34b, invocation_timestamp=2021-09-06T17:09:58.017Z, origin=Only For Testing, session_id=f74f9b4a-41bb-4f50-ae5c-2340a809c34b, session_timestamp=2021-09-06T17:09:58.017Z, thread-id=514}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 556D21D49C890A014BD72ADA319BF65460E68EF5F0782B408FC7BC154885FB50
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:423) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.5.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:101) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:299) ~[corda-node-4.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:66) ~[corda-node-4.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_292]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_292]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_292]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_292]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_292]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_292]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	... 19 more
[WARN ] 2021-09-06T17:09:58,263Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [c4b6208d-b352-4292-9549-81ef53e1aeb5] errored, dumping all transitions:

 --- Transition of flow [c4b6208d-b352-4292-9549-81ef53e1aeb5] ---
  Timestamp: 2021-09-06T17:09:58.161Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[c4b6208d-b352-4292-9549-81ef53e1aeb5], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=f74f9b4a-41bb-4f50-ae5c-2340a809c34b, timestamp: 2021-09-06T17:09:58.017Z, entityType: Invocation, sessionId=f74f9b4a-41bb-4f50-ae5c-2340a809c34b, timestamp: 2021-09-06T17:09:58.017Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class com.example.flow.ExampleFlow$Initiator, classToInitiateWith=class com.example.flow.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=7, corDappName=cordapp-example-workflows-0.1, corDappHash=07E4443FF34C094BAB9F10D1418C545C5B7BA63FFD80DF7AE91689C2C99BF70C), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=482CC1A213D3BF07EFA287443EE516C1DCADB47A76D76BA0EB87303B801D8E2C), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@763d3d2e])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@763d3d2e])
    SignalFlowHasStarted(flowId=[c4b6208d-b352-4292-9549-81ef53e1aeb5])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@763d3d2e]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [c4b6208d-b352-4292-9549-81ef53e1aeb5] ---
  Timestamp: 2021-09-06T17:09:58.218Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 556D21D49C890A014BD72ADA319BF65460E68EF5F0782B408FC7BC154885FB50)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=1646824386021298786, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 556D21D49C890A014BD72ADA319BF65460E68EF5F0782B408FC7BC154885FB50)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2021-09-06T17:09:58.110Z
    2021-09-06T17:09:58.210Z


 --- Transition of flow [c4b6208d-b352-4292-9549-81ef53e1aeb5] ---
  Timestamp: 2021-09-06T17:09:58.222Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [c4b6208d-b352-4292-9549-81ef53e1aeb5] ---
  Timestamp: 2021-09-06T17:09:58.224Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2021-09-06T17:09:58.210Z
    2021-09-06T17:09:58.224Z


 --- Transition of flow [c4b6208d-b352-4292-9549-81ef53e1aeb5] ---
  Timestamp: 2021-09-06T17:09:58.260Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 556D21D49C890A014BD72ADA319BF65460E68EF5F0782B408FC7BC154885FB50, errorId=1646824386021298786)], sessions=[], senderUUID=6eb79008-0924-4d57-9e6b-196705d4f562)
    CreateTransaction
    RemoveCheckpoint(id=[c4b6208d-b352-4292-9549-81ef53e1aeb5])
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=c4b6208d-b352-4292-9549-81ef53e1aeb5)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[c4b6208d-b352-4292-9549-81ef53e1aeb5], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=1646824386021298786, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 556D21D49C890A014BD72ADA319BF65460E68EF5F0782B408FC7BC154885FB50)]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=f74f9b4a-41bb-4f50-ae5c-2340a809c34b, timestamp: 2021-09-06T17:09:58.017Z, entityType: Invocation, sessionId=f74f9b4a-41bb-4f50-ae5c-2340a809c34b, timestamp: 2021-09-06T17:09:58.017Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class com.example.flow.ExampleFlow$Initiator, classToInitiateWith=class com.example.flow.ExampleFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=7, corDappName=cordapp-example-workflows-0.1, corDappHash=07E4443FF34C094BAB9F10D1418C545C5B7BA63FFD80DF7AE91689C2C99BF70C), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=482CC1A213D3BF07EFA287443EE516C1DCADB47A76D76BA0EB87303B801D8E2C), errorState=Errored(errors=[FlowError(errorId=1646824386021298786, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 556D21D49C890A014BD72ADA319BF65460E68EF5F0782B408FC7BC154885FB50)], propagatedIndex=1, propagating=true), numberOfSuspends=0), flowLogic=com.example.flow.ExampleFlow$Initiator@2c3310ec, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, senderUUID=6eb79008-0924-4d57-9e6b-196705d4f562))
  Continuation: Abort
  Diff between previous and next state:
isRemoved: 
    false
    true
checkpoint.errorState.propagatedIndex: 
    0
    1
checkpoint.timestamp: 
    2021-09-06T17:09:58.224Z
    2021-09-06T17:09:58.232Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c4b6208d-b352-4292-9549-81ef53e1aeb5, invocation_id=f74f9b4a-41bb-4f50-ae5c-2340a809c34b, invocation_timestamp=2021-09-06T17:09:58.017Z, origin=Only For Testing, session_id=f74f9b4a-41bb-4f50-ae5c-2340a809c34b, session_timestamp=2021-09-06T17:09:58.017Z, thread-id=514}
[WARN ] 2021-09-06T17:09:58,263Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [c4b6208d-b352-4292-9549-81ef53e1aeb5] error - Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 556D21D49C890A014BD72ADA319BF65460E68EF5F0782B408FC7BC154885FB50 - Failed requirement: The IOU's value must be non-negative. [errorCode=w61rmu, moreInformationAt=https://errors.corda.net/OS/4.5/w61rmu] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c4b6208d-b352-4292-9549-81ef53e1aeb5, invocation_id=f74f9b4a-41bb-4f50-ae5c-2340a809c34b, invocation_timestamp=2021-09-06T17:09:58.017Z, origin=Only For Testing, session_id=f74f9b4a-41bb-4f50-ae5c-2340a809c34b, session_timestamp=2021-09-06T17:09:58.017Z, thread-id=514}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 556D21D49C890A014BD72ADA319BF65460E68EF5F0782B408FC7BC154885FB50
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:423) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:373) ~[corda-core-4.5.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.5.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.5.jar:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:101) ~[main/:?]
	at com.example.flow.ExampleFlow$Initiator.call(ExampleFlow.java:33) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:299) ~[corda-node-4.5.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:66) ~[corda-node-4.5.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_292]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_292]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_292]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_292]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_292]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_292]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.5.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.5.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[cordapp-example-contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:421) ~[corda-core-4.5.jar:?]
	... 19 more
[INFO ] 2021-09-06T17:09:58,299Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2021-09-06T17:09:58,310Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2021-09-06T17:09:58,314Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2021-09-06T17:09:58,371Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210906-170958.319/nodes/0/cordapps] {}
[INFO ] 2021-09-06T17:09:58,371Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-170958.319/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-170958.319/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2021-09-06T17:09:58,371Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-170958.319/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2021-09-06T17:09:58,378Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-170958.319/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2021-09-06T17:09:58,398Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-09-06T17:09:58,399Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-09-06T17:09:58,400Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-09-06T17:09:58,403Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-09-06T17:09:58,408Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-09-06T17:09:58.319Z
      epoch=1
  } {}
[INFO ] 2021-09-06T17:09:58,719Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:58,719Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20210906-170958.319/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:58,719Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:58,730Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:58,731Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:58,731Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:58,790Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:58,797Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:58,798Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:58,800Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:58,800Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:58,837Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:58,853Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-09-06T17:09:58,859Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2021-09-06T17:09:58,859Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2021-09-06T17:09:58,948Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2021-09-06T17:09:58,951Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-09-06T17:09:58,951Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948198951) {}
[INFO ] 2021-09-06T17:09:58,953Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-09-06T17:09:58,963Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948198951) {}
[INFO ] 2021-09-06T17:09:58,969Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-09-06T17:09:58,969Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-09-06T17:09:58,969Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-09-06T17:09:58,972Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948198951) {}
[INFO ] 2021-09-06T17:09:58,975Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:09:58,993Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8F9F88008B8F1EB95723502A02803512BA8D5DB53332836C6557732F16F4ED9D uploader=app filename=CorDapp Example {}
[INFO ] 2021-09-06T17:09:58,994Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2021-09-06T17:09:58,994Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2021-09-06T17:09:58,999Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948198951) {}
[INFO ] 2021-09-06T17:09:59,002Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948198951) {}
[INFO ] 2021-09-06T17:09:59,002Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:09:59,002Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948198951) {}
[INFO ] 2021-09-06T17:09:59,002Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:09:59,007Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210906-170958.319/nodes/1/cordapps] {}
[INFO ] 2021-09-06T17:09:59,007Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-170958.319/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-170958.319/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2021-09-06T17:09:59,007Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-170958.319/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2021-09-06T17:09:59,011Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-170958.319/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2021-09-06T17:09:59,028Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-09-06T17:09:59,029Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-09-06T17:09:59,030Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-09-06T17:09:59,049Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-09-06T17:09:59,051Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-09-06T17:09:58.319Z
      epoch=1
  } {}
[INFO ] 2021-09-06T17:09:59,340Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:59,342Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20210906-170958.319/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:59,342Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:59,359Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:59,361Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:59,362Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:59,446Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:59,452Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:59,453Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:59,454Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:59,454Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:59,494Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:09:59,497Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-09-06T17:09:59,499Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:09:59,499Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:09:59,584Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:09:59,585Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2021-09-06T17:09:59,599Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-09-06T17:09:59,599Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948199599) {}
[INFO ] 2021-09-06T17:09:59,601Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-09-06T17:09:59,606Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948199599) {}
[INFO ] 2021-09-06T17:09:59,612Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-09-06T17:09:59,612Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-09-06T17:09:59,612Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-09-06T17:09:59,614Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948199599) {}
[INFO ] 2021-09-06T17:09:59,618Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:09:59,638Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8F9F88008B8F1EB95723502A02803512BA8D5DB53332836C6557732F16F4ED9D uploader=app filename=CorDapp Example {}
[INFO ] 2021-09-06T17:09:59,644Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948199599) {}
[INFO ] 2021-09-06T17:09:59,646Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948198951) {}
[INFO ] 2021-09-06T17:09:59,646Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-09-06T17:09:59,652Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948199599) {}
[INFO ] 2021-09-06T17:09:59,653Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-09-06T17:09:59,659Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948199599) {}
[INFO ] 2021-09-06T17:09:59,659Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:09:59,659Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948199599) {}
[INFO ] 2021-09-06T17:09:59,659Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:09:59,663Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210906-170958.319/nodes/2/cordapps] {}
[INFO ] 2021-09-06T17:09:59,664Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-170958.319/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-170958.319/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2021-09-06T17:09:59,664Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-170958.319/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2021-09-06T17:09:59,668Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-170958.319/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2021-09-06T17:09:59,692Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-09-06T17:09:59,693Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-09-06T17:09:59,693Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-09-06T17:09:59,712Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-09-06T17:09:59,713Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-09-06T17:09:58.319Z
      epoch=1
  } {}
[INFO ] 2021-09-06T17:10:00,029Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:00,030Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20210906-170958.319/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:00,030Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:00,042Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:00,045Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:00,045Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:00,099Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:00,103Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:00,104Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:00,105Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:00,105Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:00,135Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:00,138Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-09-06T17:10:00,139Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:10:00,139Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:10:00,204Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:10:00,205Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2021-09-06T17:10:00,217Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-09-06T17:10:00,217Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948200217) {}
[INFO ] 2021-09-06T17:10:00,218Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-09-06T17:10:00,222Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948200217) {}
[INFO ] 2021-09-06T17:10:00,225Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-09-06T17:10:00,225Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-09-06T17:10:00,225Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-09-06T17:10:00,228Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948200217) {}
[INFO ] 2021-09-06T17:10:00,230Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:10:00,247Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8F9F88008B8F1EB95723502A02803512BA8D5DB53332836C6557732F16F4ED9D uploader=app filename=CorDapp Example {}
[INFO ] 2021-09-06T17:10:00,251Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948200217) {}
[INFO ] 2021-09-06T17:10:00,253Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948198951) {}
[INFO ] 2021-09-06T17:10:00,254Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-09-06T17:10:00,259Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948200217) {}
[INFO ] 2021-09-06T17:10:00,260Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-09-06T17:10:00,266Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948199599) {}
[INFO ] 2021-09-06T17:10:00,267Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-09-06T17:10:00,271Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948200217) {}
[INFO ] 2021-09-06T17:10:00,272Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-09-06T17:10:00,277Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948200217) {}
[INFO ] 2021-09-06T17:10:00,277Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:10:00,277Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948200217) {}
[INFO ] 2021-09-06T17:10:00,277Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2021-09-06T17:10:00,277Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2021-09-06T17:10:00,277Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2021-09-06T17:10:00,277Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2021-09-06T17:10:00,277Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-09-06T17:10:00,486Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000003, flow-id=eec31e24-df5f-4dbb-b802-90e4e5a91b56, invocation_id=d67e0a70-97fc-46bb-9e15-f75cdc2c4fd3, invocation_timestamp=2021-09-06T17:10:00.444Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d67e0a70-97fc-46bb-9e15-f75cdc2c4fd3, session_timestamp=2021-09-06T17:10:00.444Z, thread-id=764, tx_id=4A1DE0499C697B63DE5759FF712F5EA0A49F6C92AC346B25ABF97C25A8BC0077}
[INFO ] 2021-09-06T17:10:00,521Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000003, flow-id=eec31e24-df5f-4dbb-b802-90e4e5a91b56, invocation_id=d67e0a70-97fc-46bb-9e15-f75cdc2c4fd3, invocation_timestamp=2021-09-06T17:10:00.444Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d67e0a70-97fc-46bb-9e15-f75cdc2c4fd3, session_timestamp=2021-09-06T17:10:00.444Z, thread-id=764, tx_id=4A1DE0499C697B63DE5759FF712F5EA0A49F6C92AC346B25ABF97C25A8BC0077}
[INFO ] 2021-09-06T17:10:00,597Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=372c1d0d-c34b-4c11-b878-161d6c028240, invocation_id=cd137755-15ea-41e5-967a-0c2b9d88857d, invocation_timestamp=2021-09-06T17:10:00.278Z, origin=Only For Testing, session_id=cd137755-15ea-41e5-967a-0c2b9d88857d, session_timestamp=2021-09-06T17:10:00.278Z, thread-id=764, tx_id=4A1DE0499C697B63DE5759FF712F5EA0A49F6C92AC346B25ABF97C25A8BC0077}
[INFO ] 2021-09-06T17:10:00,597Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=372c1d0d-c34b-4c11-b878-161d6c028240, invocation_id=cd137755-15ea-41e5-967a-0c2b9d88857d, invocation_timestamp=2021-09-06T17:10:00.278Z, origin=Only For Testing, session_id=cd137755-15ea-41e5-967a-0c2b9d88857d, session_timestamp=2021-09-06T17:10:00.278Z, thread-id=764, tx_id=4A1DE0499C697B63DE5759FF712F5EA0A49F6C92AC346B25ABF97C25A8BC0077}
[INFO ] 2021-09-06T17:10:00,645Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=372c1d0d-c34b-4c11-b878-161d6c028240, invocation_id=cd137755-15ea-41e5-967a-0c2b9d88857d, invocation_timestamp=2021-09-06T17:10:00.278Z, origin=Only For Testing, session_id=cd137755-15ea-41e5-967a-0c2b9d88857d, session_timestamp=2021-09-06T17:10:00.278Z, thread-id=764, tx_id=4A1DE0499C697B63DE5759FF712F5EA0A49F6C92AC346B25ABF97C25A8BC0077}
[INFO ] 2021-09-06T17:10:00,669Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000003, flow-id=eec31e24-df5f-4dbb-b802-90e4e5a91b56, invocation_id=d67e0a70-97fc-46bb-9e15-f75cdc2c4fd3, invocation_timestamp=2021-09-06T17:10:00.444Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d67e0a70-97fc-46bb-9e15-f75cdc2c4fd3, session_timestamp=2021-09-06T17:10:00.444Z, thread-id=764, tx_id=4A1DE0499C697B63DE5759FF712F5EA0A49F6C92AC346B25ABF97C25A8BC0077}
[INFO ] 2021-09-06T17:10:00,677Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000003, flow-id=eec31e24-df5f-4dbb-b802-90e4e5a91b56, invocation_id=d67e0a70-97fc-46bb-9e15-f75cdc2c4fd3, invocation_timestamp=2021-09-06T17:10:00.444Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d67e0a70-97fc-46bb-9e15-f75cdc2c4fd3, session_timestamp=2021-09-06T17:10:00.444Z, thread-id=764, tx_id=4A1DE0499C697B63DE5759FF712F5EA0A49F6C92AC346B25ABF97C25A8BC0077}
[INFO ] 2021-09-06T17:10:00,680Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000003, flow-id=eec31e24-df5f-4dbb-b802-90e4e5a91b56, invocation_id=d67e0a70-97fc-46bb-9e15-f75cdc2c4fd3, invocation_timestamp=2021-09-06T17:10:00.444Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d67e0a70-97fc-46bb-9e15-f75cdc2c4fd3, session_timestamp=2021-09-06T17:10:00.444Z, thread-id=764, tx_id=4A1DE0499C697B63DE5759FF712F5EA0A49F6C92AC346B25ABF97C25A8BC0077}
[INFO ] 2021-09-06T17:10:00,686Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000003, flow-id=eec31e24-df5f-4dbb-b802-90e4e5a91b56, invocation_id=d67e0a70-97fc-46bb-9e15-f75cdc2c4fd3, invocation_timestamp=2021-09-06T17:10:00.444Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d67e0a70-97fc-46bb-9e15-f75cdc2c4fd3, session_timestamp=2021-09-06T17:10:00.444Z, thread-id=764, tx_id=4A1DE0499C697B63DE5759FF712F5EA0A49F6C92AC346B25ABF97C25A8BC0077}
[INFO ] 2021-09-06T17:10:00,699Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=372c1d0d-c34b-4c11-b878-161d6c028240, invocation_id=cd137755-15ea-41e5-967a-0c2b9d88857d, invocation_timestamp=2021-09-06T17:10:00.278Z, origin=Only For Testing, session_id=cd137755-15ea-41e5-967a-0c2b9d88857d, session_timestamp=2021-09-06T17:10:00.278Z, thread-id=764, tx_id=4A1DE0499C697B63DE5759FF712F5EA0A49F6C92AC346B25ABF97C25A8BC0077}
[INFO ] 2021-09-06T17:10:00,699Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=372c1d0d-c34b-4c11-b878-161d6c028240, invocation_id=cd137755-15ea-41e5-967a-0c2b9d88857d, invocation_timestamp=2021-09-06T17:10:00.278Z, origin=Only For Testing, session_id=cd137755-15ea-41e5-967a-0c2b9d88857d, session_timestamp=2021-09-06T17:10:00.278Z, thread-id=764, tx_id=4A1DE0499C697B63DE5759FF712F5EA0A49F6C92AC346B25ABF97C25A8BC0077}
[INFO ] 2021-09-06T17:10:00,706Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2021-09-06T17:10:00,710Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-5) {}
[INFO ] 2021-09-06T17:10:00,713Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-6) {}
[INFO ] 2021-09-06T17:10:00,761Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210906-171000.715/nodes/0/cordapps] {}
[INFO ] 2021-09-06T17:10:00,761Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171000.715/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171000.715/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2021-09-06T17:10:00,761Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171000.715/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2021-09-06T17:10:00,767Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171000.715/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2021-09-06T17:10:00,783Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-09-06T17:10:00,784Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-09-06T17:10:00,785Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-09-06T17:10:00,788Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-09-06T17:10:00,792Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-09-06T17:10:00.715Z
      epoch=1
  } {}
[INFO ] 2021-09-06T17:10:01,098Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:01,099Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20210906-171000.715/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:01,099Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:01,107Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:01,108Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:01,108Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:01,153Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:01,157Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:01,158Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:01,160Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:01,160Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:01,194Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:01,207Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-09-06T17:10:01,212Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2021-09-06T17:10:01,212Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2021-09-06T17:10:01,273Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2021-09-06T17:10:01,276Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-09-06T17:10:01,276Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948201276) {}
[INFO ] 2021-09-06T17:10:01,277Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-09-06T17:10:01,285Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948201276) {}
[INFO ] 2021-09-06T17:10:01,290Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-09-06T17:10:01,290Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-09-06T17:10:01,290Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-09-06T17:10:01,292Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948201276) {}
[INFO ] 2021-09-06T17:10:01,295Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:10:01,310Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8F9F88008B8F1EB95723502A02803512BA8D5DB53332836C6557732F16F4ED9D uploader=app filename=CorDapp Example {}
[INFO ] 2021-09-06T17:10:01,312Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2021-09-06T17:10:01,312Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2021-09-06T17:10:01,316Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948201276) {}
[INFO ] 2021-09-06T17:10:01,317Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948201276) {}
[INFO ] 2021-09-06T17:10:01,317Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:10:01,318Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948201276) {}
[INFO ] 2021-09-06T17:10:01,318Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:10:01,322Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210906-171000.715/nodes/1/cordapps] {}
[INFO ] 2021-09-06T17:10:01,322Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171000.715/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171000.715/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2021-09-06T17:10:01,322Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171000.715/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2021-09-06T17:10:01,326Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171000.715/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2021-09-06T17:10:01,343Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-09-06T17:10:01,344Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-09-06T17:10:01,345Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-09-06T17:10:01,361Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-09-06T17:10:01,362Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-09-06T17:10:00.715Z
      epoch=1
  } {}
[INFO ] 2021-09-06T17:10:01,606Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:01,607Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20210906-171000.715/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:01,607Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:01,618Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:01,620Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:01,620Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:01,683Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:01,691Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:01,692Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:01,694Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:01,694Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:01,736Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:01,739Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-09-06T17:10:01,740Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:10:01,740Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:10:01,813Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:10:01,814Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2021-09-06T17:10:01,826Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-09-06T17:10:01,826Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948201826) {}
[INFO ] 2021-09-06T17:10:01,827Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-09-06T17:10:01,831Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948201826) {}
[INFO ] 2021-09-06T17:10:01,834Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-09-06T17:10:01,835Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-09-06T17:10:01,835Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-09-06T17:10:01,836Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948201826) {}
[INFO ] 2021-09-06T17:10:01,839Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:10:01,856Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8F9F88008B8F1EB95723502A02803512BA8D5DB53332836C6557732F16F4ED9D uploader=app filename=CorDapp Example {}
[INFO ] 2021-09-06T17:10:01,860Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948201826) {}
[INFO ] 2021-09-06T17:10:01,862Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948201276) {}
[INFO ] 2021-09-06T17:10:01,864Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-09-06T17:10:01,872Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948201826) {}
[INFO ] 2021-09-06T17:10:01,873Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-09-06T17:10:01,879Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948201826) {}
[INFO ] 2021-09-06T17:10:01,879Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:10:01,879Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948201826) {}
[INFO ] 2021-09-06T17:10:01,879Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:10:01,883Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210906-171000.715/nodes/2/cordapps] {}
[INFO ] 2021-09-06T17:10:01,884Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171000.715/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171000.715/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2021-09-06T17:10:01,884Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171000.715/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2021-09-06T17:10:01,889Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171000.715/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2021-09-06T17:10:01,905Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-09-06T17:10:01,906Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-09-06T17:10:01,906Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-09-06T17:10:01,922Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-09-06T17:10:01,924Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-09-06T17:10:00.715Z
      epoch=1
  } {}
[INFO ] 2021-09-06T17:10:02,178Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:02,179Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20210906-171000.715/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:02,179Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:02,186Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:02,187Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:02,187Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:02,227Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:02,232Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:02,232Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:02,234Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:02,234Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:02,260Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:02,263Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-09-06T17:10:02,264Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:10:02,264Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:10:02,318Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:10:02,319Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2021-09-06T17:10:02,333Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-09-06T17:10:02,333Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948202333) {}
[INFO ] 2021-09-06T17:10:02,334Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-09-06T17:10:02,338Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948202333) {}
[INFO ] 2021-09-06T17:10:02,342Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-09-06T17:10:02,342Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-09-06T17:10:02,342Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-09-06T17:10:02,352Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948202333) {}
[INFO ] 2021-09-06T17:10:02,355Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:10:02,372Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8F9F88008B8F1EB95723502A02803512BA8D5DB53332836C6557732F16F4ED9D uploader=app filename=CorDapp Example {}
[INFO ] 2021-09-06T17:10:02,377Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948202333) {}
[INFO ] 2021-09-06T17:10:02,379Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948201276) {}
[INFO ] 2021-09-06T17:10:02,380Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-09-06T17:10:02,386Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948202333) {}
[INFO ] 2021-09-06T17:10:02,387Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-09-06T17:10:02,393Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948201826) {}
[INFO ] 2021-09-06T17:10:02,393Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-09-06T17:10:02,399Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948202333) {}
[INFO ] 2021-09-06T17:10:02,399Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-09-06T17:10:02,405Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948202333) {}
[INFO ] 2021-09-06T17:10:02,405Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:10:02,405Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948202333) {}
[INFO ] 2021-09-06T17:10:02,405Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2021-09-06T17:10:02,406Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2021-09-06T17:10:02,406Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2021-09-06T17:10:02,406Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2021-09-06T17:10:02,406Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-09-06T17:10:02,515Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=9a2b9011-dffe-4510-a640-a58b8b48c972, invocation_id=30196e45-ebb5-4f6f-bc0a-2944ac9b12f6, invocation_timestamp=2021-09-06T17:10:02.497Z, origin=O=Mock Company 1, L=London, C=GB, session_id=30196e45-ebb5-4f6f-bc0a-2944ac9b12f6, session_timestamp=2021-09-06T17:10:02.497Z, thread-id=1009, tx_id=CD574A6E542F4B663F5CA8BB6738524C6C59717E76006001E33F55E9EFD2C9E1}
[INFO ] 2021-09-06T17:10:02,525Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=9a2b9011-dffe-4510-a640-a58b8b48c972, invocation_id=30196e45-ebb5-4f6f-bc0a-2944ac9b12f6, invocation_timestamp=2021-09-06T17:10:02.497Z, origin=O=Mock Company 1, L=London, C=GB, session_id=30196e45-ebb5-4f6f-bc0a-2944ac9b12f6, session_timestamp=2021-09-06T17:10:02.497Z, thread-id=1009, tx_id=CD574A6E542F4B663F5CA8BB6738524C6C59717E76006001E33F55E9EFD2C9E1}
[INFO ] 2021-09-06T17:10:02,598Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=c7c9cc17-6cb5-4d93-b8e8-e0a7e9faf426, invocation_id=7af8f2e4-b418-4df3-9ba9-36c8b6c5d0b9, invocation_timestamp=2021-09-06T17:10:02.407Z, origin=Only For Testing, session_id=7af8f2e4-b418-4df3-9ba9-36c8b6c5d0b9, session_timestamp=2021-09-06T17:10:02.407Z, thread-id=1009, tx_id=CD574A6E542F4B663F5CA8BB6738524C6C59717E76006001E33F55E9EFD2C9E1}
[INFO ] 2021-09-06T17:10:02,598Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=c7c9cc17-6cb5-4d93-b8e8-e0a7e9faf426, invocation_id=7af8f2e4-b418-4df3-9ba9-36c8b6c5d0b9, invocation_timestamp=2021-09-06T17:10:02.407Z, origin=Only For Testing, session_id=7af8f2e4-b418-4df3-9ba9-36c8b6c5d0b9, session_timestamp=2021-09-06T17:10:02.407Z, thread-id=1009, tx_id=CD574A6E542F4B663F5CA8BB6738524C6C59717E76006001E33F55E9EFD2C9E1}
[INFO ] 2021-09-06T17:10:02,612Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=c7c9cc17-6cb5-4d93-b8e8-e0a7e9faf426, invocation_id=7af8f2e4-b418-4df3-9ba9-36c8b6c5d0b9, invocation_timestamp=2021-09-06T17:10:02.407Z, origin=Only For Testing, session_id=7af8f2e4-b418-4df3-9ba9-36c8b6c5d0b9, session_timestamp=2021-09-06T17:10:02.407Z, thread-id=1009, tx_id=CD574A6E542F4B663F5CA8BB6738524C6C59717E76006001E33F55E9EFD2C9E1}
[INFO ] 2021-09-06T17:10:02,628Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=9a2b9011-dffe-4510-a640-a58b8b48c972, invocation_id=30196e45-ebb5-4f6f-bc0a-2944ac9b12f6, invocation_timestamp=2021-09-06T17:10:02.497Z, origin=O=Mock Company 1, L=London, C=GB, session_id=30196e45-ebb5-4f6f-bc0a-2944ac9b12f6, session_timestamp=2021-09-06T17:10:02.497Z, thread-id=1009, tx_id=CD574A6E542F4B663F5CA8BB6738524C6C59717E76006001E33F55E9EFD2C9E1}
[INFO ] 2021-09-06T17:10:02,634Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=9a2b9011-dffe-4510-a640-a58b8b48c972, invocation_id=30196e45-ebb5-4f6f-bc0a-2944ac9b12f6, invocation_timestamp=2021-09-06T17:10:02.497Z, origin=O=Mock Company 1, L=London, C=GB, session_id=30196e45-ebb5-4f6f-bc0a-2944ac9b12f6, session_timestamp=2021-09-06T17:10:02.497Z, thread-id=1009, tx_id=CD574A6E542F4B663F5CA8BB6738524C6C59717E76006001E33F55E9EFD2C9E1}
[INFO ] 2021-09-06T17:10:02,637Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000005, flow-id=9a2b9011-dffe-4510-a640-a58b8b48c972, invocation_id=30196e45-ebb5-4f6f-bc0a-2944ac9b12f6, invocation_timestamp=2021-09-06T17:10:02.497Z, origin=O=Mock Company 1, L=London, C=GB, session_id=30196e45-ebb5-4f6f-bc0a-2944ac9b12f6, session_timestamp=2021-09-06T17:10:02.497Z, thread-id=1009, tx_id=CD574A6E542F4B663F5CA8BB6738524C6C59717E76006001E33F55E9EFD2C9E1}
[INFO ] 2021-09-06T17:10:02,642Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000005, flow-id=9a2b9011-dffe-4510-a640-a58b8b48c972, invocation_id=30196e45-ebb5-4f6f-bc0a-2944ac9b12f6, invocation_timestamp=2021-09-06T17:10:02.497Z, origin=O=Mock Company 1, L=London, C=GB, session_id=30196e45-ebb5-4f6f-bc0a-2944ac9b12f6, session_timestamp=2021-09-06T17:10:02.497Z, thread-id=1009, tx_id=CD574A6E542F4B663F5CA8BB6738524C6C59717E76006001E33F55E9EFD2C9E1}
[INFO ] 2021-09-06T17:10:02,648Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=c7c9cc17-6cb5-4d93-b8e8-e0a7e9faf426, invocation_id=7af8f2e4-b418-4df3-9ba9-36c8b6c5d0b9, invocation_timestamp=2021-09-06T17:10:02.407Z, origin=Only For Testing, session_id=7af8f2e4-b418-4df3-9ba9-36c8b6c5d0b9, session_timestamp=2021-09-06T17:10:02.407Z, thread-id=1009, tx_id=CD574A6E542F4B663F5CA8BB6738524C6C59717E76006001E33F55E9EFD2C9E1}
[INFO ] 2021-09-06T17:10:02,649Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=c7c9cc17-6cb5-4d93-b8e8-e0a7e9faf426, invocation_id=7af8f2e4-b418-4df3-9ba9-36c8b6c5d0b9, invocation_timestamp=2021-09-06T17:10:02.407Z, origin=Only For Testing, session_id=7af8f2e4-b418-4df3-9ba9-36c8b6c5d0b9, session_timestamp=2021-09-06T17:10:02.407Z, thread-id=1009, tx_id=CD574A6E542F4B663F5CA8BB6738524C6C59717E76006001E33F55E9EFD2C9E1}
[INFO ] 2021-09-06T17:10:02,655Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-7) {}
[INFO ] 2021-09-06T17:10:02,657Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-8) {}
[INFO ] 2021-09-06T17:10:02,659Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-9) {}
[INFO ] 2021-09-06T17:10:02,702Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210906-171002.661/nodes/0/cordapps] {}
[INFO ] 2021-09-06T17:10:02,702Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171002.661/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171002.661/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2021-09-06T17:10:02,702Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171002.661/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2021-09-06T17:10:02,707Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171002.661/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2021-09-06T17:10:02,721Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-09-06T17:10:02,721Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-09-06T17:10:02,722Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-09-06T17:10:02,726Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-09-06T17:10:02,729Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-09-06T17:10:02.661Z
      epoch=1
  } {}
[INFO ] 2021-09-06T17:10:03,029Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:03,029Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20210906-171002.661/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:03,029Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:03,038Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:03,040Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:03,040Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:03,090Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:03,095Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:03,096Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:03,098Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:03,098Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:03,129Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:03,141Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-09-06T17:10:03,147Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2021-09-06T17:10:03,147Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2021-09-06T17:10:03,217Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2021-09-06T17:10:03,220Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-09-06T17:10:03,220Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948203220) {}
[INFO ] 2021-09-06T17:10:03,222Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-09-06T17:10:03,230Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948203220) {}
[INFO ] 2021-09-06T17:10:03,235Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-09-06T17:10:03,236Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-09-06T17:10:03,236Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-09-06T17:10:03,237Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948203220) {}
[INFO ] 2021-09-06T17:10:03,240Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:10:03,256Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8F9F88008B8F1EB95723502A02803512BA8D5DB53332836C6557732F16F4ED9D uploader=app filename=CorDapp Example {}
[INFO ] 2021-09-06T17:10:03,258Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2021-09-06T17:10:03,258Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2021-09-06T17:10:03,260Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948203220) {}
[INFO ] 2021-09-06T17:10:03,262Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948203220) {}
[INFO ] 2021-09-06T17:10:03,262Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:10:03,262Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948203220) {}
[INFO ] 2021-09-06T17:10:03,262Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:10:03,266Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210906-171002.661/nodes/1/cordapps] {}
[INFO ] 2021-09-06T17:10:03,266Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171002.661/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171002.661/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2021-09-06T17:10:03,266Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171002.661/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2021-09-06T17:10:03,270Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171002.661/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2021-09-06T17:10:03,284Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-09-06T17:10:03,285Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-09-06T17:10:03,285Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-09-06T17:10:03,301Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-09-06T17:10:03,303Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-09-06T17:10:02.661Z
      epoch=1
  } {}
[INFO ] 2021-09-06T17:10:03,538Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:03,539Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20210906-171002.661/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:03,539Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:03,549Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:03,557Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:03,557Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:03,601Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:03,605Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:03,606Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:03,607Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:03,607Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:03,635Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:03,638Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-09-06T17:10:03,639Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:10:03,639Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:10:03,695Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:10:03,695Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2021-09-06T17:10:03,707Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-09-06T17:10:03,707Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948203707) {}
[INFO ] 2021-09-06T17:10:03,708Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-09-06T17:10:03,711Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948203707) {}
[INFO ] 2021-09-06T17:10:03,714Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-09-06T17:10:03,715Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-09-06T17:10:03,715Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-09-06T17:10:03,716Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948203707) {}
[INFO ] 2021-09-06T17:10:03,719Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:10:03,735Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8F9F88008B8F1EB95723502A02803512BA8D5DB53332836C6557732F16F4ED9D uploader=app filename=CorDapp Example {}
[INFO ] 2021-09-06T17:10:03,739Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948203707) {}
[INFO ] 2021-09-06T17:10:03,745Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948203220) {}
[INFO ] 2021-09-06T17:10:03,746Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-09-06T17:10:03,752Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948203707) {}
[INFO ] 2021-09-06T17:10:03,752Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-09-06T17:10:03,757Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948203707) {}
[INFO ] 2021-09-06T17:10:03,757Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:10:03,757Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948203707) {}
[INFO ] 2021-09-06T17:10:03,757Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:10:03,761Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210906-171002.661/nodes/2/cordapps] {}
[INFO ] 2021-09-06T17:10:03,762Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171002.661/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171002.661/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2021-09-06T17:10:03,762Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171002.661/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2021-09-06T17:10:03,766Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171002.661/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2021-09-06T17:10:03,780Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-09-06T17:10:03,781Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-09-06T17:10:03,782Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-09-06T17:10:03,798Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-09-06T17:10:03,800Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-09-06T17:10:02.661Z
      epoch=1
  } {}
[INFO ] 2021-09-06T17:10:04,014Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:04,014Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20210906-171002.661/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:04,014Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:04,023Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:04,024Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:04,024Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:04,070Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:04,074Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:04,075Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:04,076Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:04,076Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:04,103Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:04,105Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-09-06T17:10:04,106Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:10:04,106Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:10:04,159Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:10:04,160Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2021-09-06T17:10:04,171Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-09-06T17:10:04,171Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948204171) {}
[INFO ] 2021-09-06T17:10:04,172Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-09-06T17:10:04,175Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948204171) {}
[INFO ] 2021-09-06T17:10:04,178Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-09-06T17:10:04,178Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-09-06T17:10:04,178Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-09-06T17:10:04,180Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948204171) {}
[INFO ] 2021-09-06T17:10:04,183Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:10:04,198Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8F9F88008B8F1EB95723502A02803512BA8D5DB53332836C6557732F16F4ED9D uploader=app filename=CorDapp Example {}
[INFO ] 2021-09-06T17:10:04,202Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948204171) {}
[INFO ] 2021-09-06T17:10:04,203Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948203220) {}
[INFO ] 2021-09-06T17:10:04,204Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-09-06T17:10:04,208Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948204171) {}
[INFO ] 2021-09-06T17:10:04,209Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-09-06T17:10:04,213Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948203707) {}
[INFO ] 2021-09-06T17:10:04,214Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-09-06T17:10:04,218Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948204171) {}
[INFO ] 2021-09-06T17:10:04,218Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-09-06T17:10:04,223Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948204171) {}
[INFO ] 2021-09-06T17:10:04,223Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:10:04,223Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948204171) {}
[INFO ] 2021-09-06T17:10:04,223Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2021-09-06T17:10:04,223Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2021-09-06T17:10:04,223Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2021-09-06T17:10:04,223Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2021-09-06T17:10:04,223Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-09-06T17:10:04,290Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=581b09ae-a1e2-45d1-bb34-9bb743225bee, invocation_id=46bb94bb-33cc-4ca9-8f76-766562166c51, invocation_timestamp=2021-09-06T17:10:04.280Z, origin=O=Mock Company 1, L=London, C=GB, session_id=46bb94bb-33cc-4ca9-8f76-766562166c51, session_timestamp=2021-09-06T17:10:04.280Z, thread-id=1254, tx_id=0C7BDFDB1234E486DC52B56084A884FBF7DA63FB427994F1B23E9896840C94A0}
[INFO ] 2021-09-06T17:10:04,298Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=581b09ae-a1e2-45d1-bb34-9bb743225bee, invocation_id=46bb94bb-33cc-4ca9-8f76-766562166c51, invocation_timestamp=2021-09-06T17:10:04.280Z, origin=O=Mock Company 1, L=London, C=GB, session_id=46bb94bb-33cc-4ca9-8f76-766562166c51, session_timestamp=2021-09-06T17:10:04.280Z, thread-id=1254, tx_id=0C7BDFDB1234E486DC52B56084A884FBF7DA63FB427994F1B23E9896840C94A0}
[INFO ] 2021-09-06T17:10:04,352Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=52b349e9-ad7b-44ac-842e-d71c5baea3d3, invocation_id=c96fb326-f228-4911-8ff2-ac5e8e5e7fbd, invocation_timestamp=2021-09-06T17:10:04.224Z, origin=Only For Testing, session_id=c96fb326-f228-4911-8ff2-ac5e8e5e7fbd, session_timestamp=2021-09-06T17:10:04.224Z, thread-id=1254, tx_id=0C7BDFDB1234E486DC52B56084A884FBF7DA63FB427994F1B23E9896840C94A0}
[INFO ] 2021-09-06T17:10:04,352Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=52b349e9-ad7b-44ac-842e-d71c5baea3d3, invocation_id=c96fb326-f228-4911-8ff2-ac5e8e5e7fbd, invocation_timestamp=2021-09-06T17:10:04.224Z, origin=Only For Testing, session_id=c96fb326-f228-4911-8ff2-ac5e8e5e7fbd, session_timestamp=2021-09-06T17:10:04.224Z, thread-id=1254, tx_id=0C7BDFDB1234E486DC52B56084A884FBF7DA63FB427994F1B23E9896840C94A0}
[INFO ] 2021-09-06T17:10:04,364Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=52b349e9-ad7b-44ac-842e-d71c5baea3d3, invocation_id=c96fb326-f228-4911-8ff2-ac5e8e5e7fbd, invocation_timestamp=2021-09-06T17:10:04.224Z, origin=Only For Testing, session_id=c96fb326-f228-4911-8ff2-ac5e8e5e7fbd, session_timestamp=2021-09-06T17:10:04.224Z, thread-id=1254, tx_id=0C7BDFDB1234E486DC52B56084A884FBF7DA63FB427994F1B23E9896840C94A0}
[INFO ] 2021-09-06T17:10:04,376Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=581b09ae-a1e2-45d1-bb34-9bb743225bee, invocation_id=46bb94bb-33cc-4ca9-8f76-766562166c51, invocation_timestamp=2021-09-06T17:10:04.280Z, origin=O=Mock Company 1, L=London, C=GB, session_id=46bb94bb-33cc-4ca9-8f76-766562166c51, session_timestamp=2021-09-06T17:10:04.280Z, thread-id=1254, tx_id=0C7BDFDB1234E486DC52B56084A884FBF7DA63FB427994F1B23E9896840C94A0}
[INFO ] 2021-09-06T17:10:04,381Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=581b09ae-a1e2-45d1-bb34-9bb743225bee, invocation_id=46bb94bb-33cc-4ca9-8f76-766562166c51, invocation_timestamp=2021-09-06T17:10:04.280Z, origin=O=Mock Company 1, L=London, C=GB, session_id=46bb94bb-33cc-4ca9-8f76-766562166c51, session_timestamp=2021-09-06T17:10:04.280Z, thread-id=1254, tx_id=0C7BDFDB1234E486DC52B56084A884FBF7DA63FB427994F1B23E9896840C94A0}
[INFO ] 2021-09-06T17:10:04,383Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=581b09ae-a1e2-45d1-bb34-9bb743225bee, invocation_id=46bb94bb-33cc-4ca9-8f76-766562166c51, invocation_timestamp=2021-09-06T17:10:04.280Z, origin=O=Mock Company 1, L=London, C=GB, session_id=46bb94bb-33cc-4ca9-8f76-766562166c51, session_timestamp=2021-09-06T17:10:04.280Z, thread-id=1254, tx_id=0C7BDFDB1234E486DC52B56084A884FBF7DA63FB427994F1B23E9896840C94A0}
[INFO ] 2021-09-06T17:10:04,387Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=581b09ae-a1e2-45d1-bb34-9bb743225bee, invocation_id=46bb94bb-33cc-4ca9-8f76-766562166c51, invocation_timestamp=2021-09-06T17:10:04.280Z, origin=O=Mock Company 1, L=London, C=GB, session_id=46bb94bb-33cc-4ca9-8f76-766562166c51, session_timestamp=2021-09-06T17:10:04.280Z, thread-id=1254, tx_id=0C7BDFDB1234E486DC52B56084A884FBF7DA63FB427994F1B23E9896840C94A0}
[INFO ] 2021-09-06T17:10:04,393Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=52b349e9-ad7b-44ac-842e-d71c5baea3d3, invocation_id=c96fb326-f228-4911-8ff2-ac5e8e5e7fbd, invocation_timestamp=2021-09-06T17:10:04.224Z, origin=Only For Testing, session_id=c96fb326-f228-4911-8ff2-ac5e8e5e7fbd, session_timestamp=2021-09-06T17:10:04.224Z, thread-id=1254, tx_id=0C7BDFDB1234E486DC52B56084A884FBF7DA63FB427994F1B23E9896840C94A0}
[INFO ] 2021-09-06T17:10:04,393Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=52b349e9-ad7b-44ac-842e-d71c5baea3d3, invocation_id=c96fb326-f228-4911-8ff2-ac5e8e5e7fbd, invocation_timestamp=2021-09-06T17:10:04.224Z, origin=Only For Testing, session_id=c96fb326-f228-4911-8ff2-ac5e8e5e7fbd, session_timestamp=2021-09-06T17:10:04.224Z, thread-id=1254, tx_id=0C7BDFDB1234E486DC52B56084A884FBF7DA63FB427994F1B23E9896840C94A0}
[INFO ] 2021-09-06T17:10:04,400Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-10) {}
[INFO ] 2021-09-06T17:10:04,402Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-11) {}
[INFO ] 2021-09-06T17:10:04,403Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-12) {}
[INFO ] 2021-09-06T17:10:04,441Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210906-171004.405/nodes/0/cordapps] {}
[INFO ] 2021-09-06T17:10:04,441Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171004.405/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171004.405/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2021-09-06T17:10:04,441Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171004.405/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2021-09-06T17:10:04,446Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171004.405/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2021-09-06T17:10:04,462Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-09-06T17:10:04,463Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-09-06T17:10:04,464Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-09-06T17:10:04,467Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-09-06T17:10:04,470Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-09-06T17:10:04.405Z
      epoch=1
  } {}
[INFO ] 2021-09-06T17:10:04,731Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:04,732Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20210906-171004.405/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:04,732Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:04,742Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:04,744Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:04,744Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:04,786Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:04,791Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:04,791Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:04,793Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:04,793Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:04,826Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:04,840Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-09-06T17:10:04,847Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2021-09-06T17:10:04,847Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2021-09-06T17:10:04,927Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2021-09-06T17:10:04,930Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-09-06T17:10:04,930Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948204930) {}
[INFO ] 2021-09-06T17:10:04,931Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-09-06T17:10:04,940Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948204930) {}
[INFO ] 2021-09-06T17:10:04,946Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-09-06T17:10:04,946Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-09-06T17:10:04,946Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-09-06T17:10:04,948Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948204930) {}
[INFO ] 2021-09-06T17:10:04,951Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:10:04,968Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8F9F88008B8F1EB95723502A02803512BA8D5DB53332836C6557732F16F4ED9D uploader=app filename=CorDapp Example {}
[INFO ] 2021-09-06T17:10:04,970Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2021-09-06T17:10:04,970Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2021-09-06T17:10:04,973Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948204930) {}
[INFO ] 2021-09-06T17:10:04,974Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948204930) {}
[INFO ] 2021-09-06T17:10:04,974Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:10:04,974Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948204930) {}
[INFO ] 2021-09-06T17:10:04,974Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:10:04,978Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210906-171004.405/nodes/1/cordapps] {}
[INFO ] 2021-09-06T17:10:04,979Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171004.405/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171004.405/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2021-09-06T17:10:04,979Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171004.405/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2021-09-06T17:10:04,983Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171004.405/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2021-09-06T17:10:04,999Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-09-06T17:10:04,999Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-09-06T17:10:05,000Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-09-06T17:10:05,016Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-09-06T17:10:05,018Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-09-06T17:10:04.405Z
      epoch=1
  } {}
[INFO ] 2021-09-06T17:10:05,304Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:05,305Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20210906-171004.405/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:05,305Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:05,324Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:05,326Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:05,326Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:05,380Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:05,384Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:05,385Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:05,387Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:05,387Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:05,415Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:05,418Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-09-06T17:10:05,419Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:10:05,419Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:10:05,472Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:10:05,473Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2021-09-06T17:10:05,483Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-09-06T17:10:05,483Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948205483) {}
[INFO ] 2021-09-06T17:10:05,484Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-09-06T17:10:05,487Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948205483) {}
[INFO ] 2021-09-06T17:10:05,490Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-09-06T17:10:05,490Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-09-06T17:10:05,490Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-09-06T17:10:05,492Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948205483) {}
[INFO ] 2021-09-06T17:10:05,494Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:10:05,509Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8F9F88008B8F1EB95723502A02803512BA8D5DB53332836C6557732F16F4ED9D uploader=app filename=CorDapp Example {}
[INFO ] 2021-09-06T17:10:05,512Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948205483) {}
[INFO ] 2021-09-06T17:10:05,514Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948204930) {}
[INFO ] 2021-09-06T17:10:05,514Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-09-06T17:10:05,519Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948205483) {}
[INFO ] 2021-09-06T17:10:05,520Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-09-06T17:10:05,524Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948205483) {}
[INFO ] 2021-09-06T17:10:05,525Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:10:05,525Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948205483) {}
[INFO ] 2021-09-06T17:10:05,525Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:10:05,529Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210906-171004.405/nodes/2/cordapps] {}
[INFO ] 2021-09-06T17:10:05,529Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171004.405/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171004.405/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2021-09-06T17:10:05,530Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171004.405/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2021-09-06T17:10:05,539Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171004.405/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2021-09-06T17:10:05,554Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-09-06T17:10:05,554Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-09-06T17:10:05,555Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-09-06T17:10:05,571Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-09-06T17:10:05,572Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-09-06T17:10:04.405Z
      epoch=1
  } {}
[INFO ] 2021-09-06T17:10:05,771Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:05,772Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20210906-171004.405/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:05,772Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:05,779Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:05,780Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:05,780Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:05,821Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:05,830Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:05,831Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:05,832Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:05,832Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:05,857Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:05,861Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-09-06T17:10:05,862Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:10:05,862Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:10:05,912Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:10:05,912Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2021-09-06T17:10:05,923Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-09-06T17:10:05,923Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948205923) {}
[INFO ] 2021-09-06T17:10:05,924Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-09-06T17:10:05,926Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948205923) {}
[INFO ] 2021-09-06T17:10:05,929Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-09-06T17:10:05,929Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-09-06T17:10:05,930Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-09-06T17:10:05,931Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948205923) {}
[INFO ] 2021-09-06T17:10:05,933Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:10:05,948Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8F9F88008B8F1EB95723502A02803512BA8D5DB53332836C6557732F16F4ED9D uploader=app filename=CorDapp Example {}
[INFO ] 2021-09-06T17:10:05,951Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948205923) {}
[INFO ] 2021-09-06T17:10:05,952Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948204930) {}
[INFO ] 2021-09-06T17:10:05,953Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-09-06T17:10:05,957Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948205923) {}
[INFO ] 2021-09-06T17:10:05,957Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-09-06T17:10:05,961Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948205483) {}
[INFO ] 2021-09-06T17:10:05,962Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-09-06T17:10:05,966Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948205923) {}
[INFO ] 2021-09-06T17:10:05,966Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-09-06T17:10:05,970Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948205923) {}
[INFO ] 2021-09-06T17:10:05,970Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:10:05,970Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948205923) {}
[INFO ] 2021-09-06T17:10:05,970Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2021-09-06T17:10:05,971Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2021-09-06T17:10:05,971Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2021-09-06T17:10:05,971Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2021-09-06T17:10:05,971Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-09-06T17:10:06,033Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=2598980f-1f54-4bfe-93e8-ff1d27509587, invocation_id=6854e07e-2b99-44b8-a642-2e350f84d2c9, invocation_timestamp=2021-09-06T17:10:06.024Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6854e07e-2b99-44b8-a642-2e350f84d2c9, session_timestamp=2021-09-06T17:10:06.024Z, thread-id=1499, tx_id=82B8881818F663303D0CBCD9964512B9CD72E5CBFB6E47F7F87F2399A82EBA4B}
[INFO ] 2021-09-06T17:10:06,040Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=2598980f-1f54-4bfe-93e8-ff1d27509587, invocation_id=6854e07e-2b99-44b8-a642-2e350f84d2c9, invocation_timestamp=2021-09-06T17:10:06.024Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6854e07e-2b99-44b8-a642-2e350f84d2c9, session_timestamp=2021-09-06T17:10:06.024Z, thread-id=1499, tx_id=82B8881818F663303D0CBCD9964512B9CD72E5CBFB6E47F7F87F2399A82EBA4B}
[INFO ] 2021-09-06T17:10:06,084Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=a2003268-bbb9-45d3-9500-fa4f1576240c, invocation_id=3f4e7546-0503-41b5-893e-663b3c2c51e7, invocation_timestamp=2021-09-06T17:10:05.972Z, origin=Only For Testing, session_id=3f4e7546-0503-41b5-893e-663b3c2c51e7, session_timestamp=2021-09-06T17:10:05.972Z, thread-id=1499, tx_id=82B8881818F663303D0CBCD9964512B9CD72E5CBFB6E47F7F87F2399A82EBA4B}
[INFO ] 2021-09-06T17:10:06,084Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=a2003268-bbb9-45d3-9500-fa4f1576240c, invocation_id=3f4e7546-0503-41b5-893e-663b3c2c51e7, invocation_timestamp=2021-09-06T17:10:05.972Z, origin=Only For Testing, session_id=3f4e7546-0503-41b5-893e-663b3c2c51e7, session_timestamp=2021-09-06T17:10:05.972Z, thread-id=1499, tx_id=82B8881818F663303D0CBCD9964512B9CD72E5CBFB6E47F7F87F2399A82EBA4B}
[INFO ] 2021-09-06T17:10:06,093Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=a2003268-bbb9-45d3-9500-fa4f1576240c, invocation_id=3f4e7546-0503-41b5-893e-663b3c2c51e7, invocation_timestamp=2021-09-06T17:10:05.972Z, origin=Only For Testing, session_id=3f4e7546-0503-41b5-893e-663b3c2c51e7, session_timestamp=2021-09-06T17:10:05.972Z, thread-id=1499, tx_id=82B8881818F663303D0CBCD9964512B9CD72E5CBFB6E47F7F87F2399A82EBA4B}
[INFO ] 2021-09-06T17:10:06,104Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=2598980f-1f54-4bfe-93e8-ff1d27509587, invocation_id=6854e07e-2b99-44b8-a642-2e350f84d2c9, invocation_timestamp=2021-09-06T17:10:06.024Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6854e07e-2b99-44b8-a642-2e350f84d2c9, session_timestamp=2021-09-06T17:10:06.024Z, thread-id=1499, tx_id=82B8881818F663303D0CBCD9964512B9CD72E5CBFB6E47F7F87F2399A82EBA4B}
[INFO ] 2021-09-06T17:10:06,110Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=2598980f-1f54-4bfe-93e8-ff1d27509587, invocation_id=6854e07e-2b99-44b8-a642-2e350f84d2c9, invocation_timestamp=2021-09-06T17:10:06.024Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6854e07e-2b99-44b8-a642-2e350f84d2c9, session_timestamp=2021-09-06T17:10:06.024Z, thread-id=1499, tx_id=82B8881818F663303D0CBCD9964512B9CD72E5CBFB6E47F7F87F2399A82EBA4B}
[INFO ] 2021-09-06T17:10:06,112Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000009, flow-id=2598980f-1f54-4bfe-93e8-ff1d27509587, invocation_id=6854e07e-2b99-44b8-a642-2e350f84d2c9, invocation_timestamp=2021-09-06T17:10:06.024Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6854e07e-2b99-44b8-a642-2e350f84d2c9, session_timestamp=2021-09-06T17:10:06.024Z, thread-id=1499, tx_id=82B8881818F663303D0CBCD9964512B9CD72E5CBFB6E47F7F87F2399A82EBA4B}
[INFO ] 2021-09-06T17:10:06,116Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000009, flow-id=2598980f-1f54-4bfe-93e8-ff1d27509587, invocation_id=6854e07e-2b99-44b8-a642-2e350f84d2c9, invocation_timestamp=2021-09-06T17:10:06.024Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6854e07e-2b99-44b8-a642-2e350f84d2c9, session_timestamp=2021-09-06T17:10:06.024Z, thread-id=1499, tx_id=82B8881818F663303D0CBCD9964512B9CD72E5CBFB6E47F7F87F2399A82EBA4B}
[INFO ] 2021-09-06T17:10:06,127Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=a2003268-bbb9-45d3-9500-fa4f1576240c, invocation_id=3f4e7546-0503-41b5-893e-663b3c2c51e7, invocation_timestamp=2021-09-06T17:10:05.972Z, origin=Only For Testing, session_id=3f4e7546-0503-41b5-893e-663b3c2c51e7, session_timestamp=2021-09-06T17:10:05.972Z, thread-id=1499, tx_id=82B8881818F663303D0CBCD9964512B9CD72E5CBFB6E47F7F87F2399A82EBA4B}
[INFO ] 2021-09-06T17:10:06,127Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=a2003268-bbb9-45d3-9500-fa4f1576240c, invocation_id=3f4e7546-0503-41b5-893e-663b3c2c51e7, invocation_timestamp=2021-09-06T17:10:05.972Z, origin=Only For Testing, session_id=3f4e7546-0503-41b5-893e-663b3c2c51e7, session_timestamp=2021-09-06T17:10:05.972Z, thread-id=1499, tx_id=82B8881818F663303D0CBCD9964512B9CD72E5CBFB6E47F7F87F2399A82EBA4B}
[INFO ] 2021-09-06T17:10:06,168Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-13) {}
[INFO ] 2021-09-06T17:10:06,170Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-14) {}
[INFO ] 2021-09-06T17:10:06,172Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-15) {}
[INFO ] 2021-09-06T17:10:06,208Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210906-171006.174/nodes/0/cordapps] {}
[INFO ] 2021-09-06T17:10:06,208Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171006.174/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171006.174/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2021-09-06T17:10:06,208Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171006.174/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2021-09-06T17:10:06,212Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171006.174/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2021-09-06T17:10:06,224Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-09-06T17:10:06,225Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-09-06T17:10:06,226Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-09-06T17:10:06,228Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-09-06T17:10:06,231Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-09-06T17:10:06.174Z
      epoch=1
  } {}
[INFO ] 2021-09-06T17:10:06,467Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:06,468Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20210906-171006.174/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:06,468Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:06,475Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:06,476Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:06,476Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:06,515Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:06,518Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:06,519Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:06,520Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:06,520Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:06,546Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:06,557Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-09-06T17:10:06,562Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2021-09-06T17:10:06,562Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2021-09-06T17:10:06,614Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2021-09-06T17:10:06,616Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-09-06T17:10:06,616Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948206616) {}
[INFO ] 2021-09-06T17:10:06,617Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-09-06T17:10:06,623Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948206616) {}
[INFO ] 2021-09-06T17:10:06,628Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-09-06T17:10:06,629Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-09-06T17:10:06,629Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-09-06T17:10:06,636Z [MockNode-16-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948206616) {}
[INFO ] 2021-09-06T17:10:06,638Z [MockNode-16-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:10:06,653Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8F9F88008B8F1EB95723502A02803512BA8D5DB53332836C6557732F16F4ED9D uploader=app filename=CorDapp Example {}
[INFO ] 2021-09-06T17:10:06,654Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2021-09-06T17:10:06,654Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2021-09-06T17:10:06,657Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948206616) {}
[INFO ] 2021-09-06T17:10:06,658Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948206616) {}
[INFO ] 2021-09-06T17:10:06,659Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:10:06,659Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948206616) {}
[INFO ] 2021-09-06T17:10:06,659Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:10:06,662Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210906-171006.174/nodes/1/cordapps] {}
[INFO ] 2021-09-06T17:10:06,662Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171006.174/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171006.174/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2021-09-06T17:10:06,662Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171006.174/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2021-09-06T17:10:06,666Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171006.174/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2021-09-06T17:10:06,678Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-09-06T17:10:06,679Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-09-06T17:10:06,679Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-09-06T17:10:06,694Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-09-06T17:10:06,695Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-09-06T17:10:06.174Z
      epoch=1
  } {}
[INFO ] 2021-09-06T17:10:06,882Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:06,882Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20210906-171006.174/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:06,882Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:06,891Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:06,892Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:06,892Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:06,933Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:06,937Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:06,938Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:06,939Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:06,939Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:06,963Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:06,965Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-09-06T17:10:06,966Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:10:06,966Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:10:07,012Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:10:07,013Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2021-09-06T17:10:07,023Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-09-06T17:10:07,023Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948207023) {}
[INFO ] 2021-09-06T17:10:07,024Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-09-06T17:10:07,026Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948207023) {}
[INFO ] 2021-09-06T17:10:07,029Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-09-06T17:10:07,029Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-09-06T17:10:07,029Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-09-06T17:10:07,031Z [MockNode-17-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948207023) {}
[INFO ] 2021-09-06T17:10:07,033Z [MockNode-17-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:10:07,047Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8F9F88008B8F1EB95723502A02803512BA8D5DB53332836C6557732F16F4ED9D uploader=app filename=CorDapp Example {}
[INFO ] 2021-09-06T17:10:07,051Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948207023) {}
[INFO ] 2021-09-06T17:10:07,052Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948206616) {}
[INFO ] 2021-09-06T17:10:07,053Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-09-06T17:10:07,056Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948207023) {}
[INFO ] 2021-09-06T17:10:07,057Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-09-06T17:10:07,060Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948207023) {}
[INFO ] 2021-09-06T17:10:07,060Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:10:07,061Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948207023) {}
[INFO ] 2021-09-06T17:10:07,061Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:10:07,064Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20210906-171006.174/nodes/2/cordapps] {}
[INFO ] 2021-09-06T17:10:07,064Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171006.174/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171006.174/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null) {}
[INFO ] 2021-09-06T17:10:07,064Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171006.174/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2021-09-06T17:10:07,068Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/hiranhari/Documents/projects/Mitrai/Corda_Developer_Training/cordapp-example/workflows-java/build/mock-network/20210906-171006.174/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2021-09-06T17:10:07,080Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2021-09-06T17:10:07,081Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2021-09-06T17:10:07,082Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2021-09-06T17:10:07,098Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-09-06T17:10:07,099Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2021-09-06T17:10:06.174Z
      epoch=1
  } {}
[INFO ] 2021-09-06T17:10:07,293Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:07,294Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20210906-171006.174/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:07,294Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:07,300Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:07,301Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:07,301Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:07,335Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:07,339Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:07,339Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:07,340Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:07,340Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:07,371Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2021-09-06T17:10:07,373Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2021-09-06T17:10:07,374Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:10:07,374Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:10:07,422Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2021-09-06T17:10:07,422Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2021-09-06T17:10:07,433Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2021-09-06T17:10:07,433Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948207433) {}
[INFO ] 2021-09-06T17:10:07,434Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-09-06T17:10:07,437Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948207433) {}
[INFO ] 2021-09-06T17:10:07,439Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2021-09-06T17:10:07,440Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2021-09-06T17:10:07,440Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2021-09-06T17:10:07,441Z [MockNode-18-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948207433) {}
[INFO ] 2021-09-06T17:10:07,444Z [MockNode-18-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:10:07,458Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8F9F88008B8F1EB95723502A02803512BA8D5DB53332836C6557732F16F4ED9D uploader=app filename=CorDapp Example {}
[INFO ] 2021-09-06T17:10:07,462Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948207433) {}
[INFO ] 2021-09-06T17:10:07,463Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=7, serial=1630948206616) {}
[INFO ] 2021-09-06T17:10:07,464Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2021-09-06T17:10:07,467Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948207433) {}
[INFO ] 2021-09-06T17:10:07,468Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-09-06T17:10:07,471Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=7, serial=1630948207023) {}
[INFO ] 2021-09-06T17:10:07,472Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2021-09-06T17:10:07,476Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948207433) {}
[INFO ] 2021-09-06T17:10:07,476Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2021-09-06T17:10:07,480Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948207433) {}
[INFO ] 2021-09-06T17:10:07,480Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2021-09-06T17:10:07,480Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=7, serial=1630948207433) {}
[INFO ] 2021-09-06T17:10:07,480Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2021-09-06T17:10:07,480Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2021-09-06T17:10:07,480Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[WARN ] 2021-09-06T17:10:07,480Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.ExampleFlow$Initiator, currently using: class com.example.flow.ExampleFlow$Acceptor {}
[INFO ] 2021-09-06T17:10:07,480Z [Test worker] internal.NodeFlowManager. - Registered com.example.flow.ExampleFlow$Initiator to initiate com.example.flow.ExampleFlow$Acceptor (version 1) {}
[INFO ] 2021-09-06T17:10:07,848Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=1bd240d4-9f92-4c31-b6ca-f6119e5bd48f, invocation_id=8b815b2b-0ee7-44ee-928e-1cede457208e, invocation_timestamp=2021-09-06T17:10:07.838Z, origin=O=Mock Company 1, L=London, C=GB, session_id=8b815b2b-0ee7-44ee-928e-1cede457208e, session_timestamp=2021-09-06T17:10:07.838Z, thread-id=1744, tx_id=3042417AD97A921DAA5C9C90F71DBAEC11C8970420668C069076FCF53188F377}
[INFO ] 2021-09-06T17:10:07,856Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=1bd240d4-9f92-4c31-b6ca-f6119e5bd48f, invocation_id=8b815b2b-0ee7-44ee-928e-1cede457208e, invocation_timestamp=2021-09-06T17:10:07.838Z, origin=O=Mock Company 1, L=London, C=GB, session_id=8b815b2b-0ee7-44ee-928e-1cede457208e, session_timestamp=2021-09-06T17:10:07.838Z, thread-id=1744, tx_id=3042417AD97A921DAA5C9C90F71DBAEC11C8970420668C069076FCF53188F377}
[INFO ] 2021-09-06T17:10:07,908Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=fd6dd37b-c243-404b-b0cc-7639bd6139e0, invocation_id=f7b3a270-939f-4672-a643-61916e8de204, invocation_timestamp=2021-09-06T17:10:07.481Z, origin=Only For Testing, session_id=f7b3a270-939f-4672-a643-61916e8de204, session_timestamp=2021-09-06T17:10:07.481Z, thread-id=1744, tx_id=3042417AD97A921DAA5C9C90F71DBAEC11C8970420668C069076FCF53188F377}
[INFO ] 2021-09-06T17:10:07,908Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=fd6dd37b-c243-404b-b0cc-7639bd6139e0, invocation_id=f7b3a270-939f-4672-a643-61916e8de204, invocation_timestamp=2021-09-06T17:10:07.481Z, origin=Only For Testing, session_id=f7b3a270-939f-4672-a643-61916e8de204, session_timestamp=2021-09-06T17:10:07.481Z, thread-id=1744, tx_id=3042417AD97A921DAA5C9C90F71DBAEC11C8970420668C069076FCF53188F377}
[INFO ] 2021-09-06T17:10:07,918Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=fd6dd37b-c243-404b-b0cc-7639bd6139e0, invocation_id=f7b3a270-939f-4672-a643-61916e8de204, invocation_timestamp=2021-09-06T17:10:07.481Z, origin=Only For Testing, session_id=f7b3a270-939f-4672-a643-61916e8de204, session_timestamp=2021-09-06T17:10:07.481Z, thread-id=1744, tx_id=3042417AD97A921DAA5C9C90F71DBAEC11C8970420668C069076FCF53188F377}
[INFO ] 2021-09-06T17:10:07,929Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=1bd240d4-9f92-4c31-b6ca-f6119e5bd48f, invocation_id=8b815b2b-0ee7-44ee-928e-1cede457208e, invocation_timestamp=2021-09-06T17:10:07.838Z, origin=O=Mock Company 1, L=London, C=GB, session_id=8b815b2b-0ee7-44ee-928e-1cede457208e, session_timestamp=2021-09-06T17:10:07.838Z, thread-id=1744, tx_id=3042417AD97A921DAA5C9C90F71DBAEC11C8970420668C069076FCF53188F377}
[INFO ] 2021-09-06T17:10:07,935Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=1bd240d4-9f92-4c31-b6ca-f6119e5bd48f, invocation_id=8b815b2b-0ee7-44ee-928e-1cede457208e, invocation_timestamp=2021-09-06T17:10:07.838Z, origin=O=Mock Company 1, L=London, C=GB, session_id=8b815b2b-0ee7-44ee-928e-1cede457208e, session_timestamp=2021-09-06T17:10:07.838Z, thread-id=1744, tx_id=3042417AD97A921DAA5C9C90F71DBAEC11C8970420668C069076FCF53188F377}
[INFO ] 2021-09-06T17:10:07,936Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000011, flow-id=1bd240d4-9f92-4c31-b6ca-f6119e5bd48f, invocation_id=8b815b2b-0ee7-44ee-928e-1cede457208e, invocation_timestamp=2021-09-06T17:10:07.838Z, origin=O=Mock Company 1, L=London, C=GB, session_id=8b815b2b-0ee7-44ee-928e-1cede457208e, session_timestamp=2021-09-06T17:10:07.838Z, thread-id=1744, tx_id=3042417AD97A921DAA5C9C90F71DBAEC11C8970420668C069076FCF53188F377}
[INFO ] 2021-09-06T17:10:07,941Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000011, flow-id=1bd240d4-9f92-4c31-b6ca-f6119e5bd48f, invocation_id=8b815b2b-0ee7-44ee-928e-1cede457208e, invocation_timestamp=2021-09-06T17:10:07.838Z, origin=O=Mock Company 1, L=London, C=GB, session_id=8b815b2b-0ee7-44ee-928e-1cede457208e, session_timestamp=2021-09-06T17:10:07.838Z, thread-id=1744, tx_id=3042417AD97A921DAA5C9C90F71DBAEC11C8970420668C069076FCF53188F377}
[INFO ] 2021-09-06T17:10:07,946Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=fd6dd37b-c243-404b-b0cc-7639bd6139e0, invocation_id=f7b3a270-939f-4672-a643-61916e8de204, invocation_timestamp=2021-09-06T17:10:07.481Z, origin=Only For Testing, session_id=f7b3a270-939f-4672-a643-61916e8de204, session_timestamp=2021-09-06T17:10:07.481Z, thread-id=1744, tx_id=3042417AD97A921DAA5C9C90F71DBAEC11C8970420668C069076FCF53188F377}
[INFO ] 2021-09-06T17:10:07,946Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=fd6dd37b-c243-404b-b0cc-7639bd6139e0, invocation_id=f7b3a270-939f-4672-a643-61916e8de204, invocation_timestamp=2021-09-06T17:10:07.481Z, origin=Only For Testing, session_id=f7b3a270-939f-4672-a643-61916e8de204, session_timestamp=2021-09-06T17:10:07.481Z, thread-id=1744, tx_id=3042417AD97A921DAA5C9C90F71DBAEC11C8970420668C069076FCF53188F377}
[INFO ] 2021-09-06T17:10:07,951Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-16) {}
[INFO ] 2021-09-06T17:10:07,953Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-17) {}
[INFO ] 2021-09-06T17:10:07,954Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-18) {}
